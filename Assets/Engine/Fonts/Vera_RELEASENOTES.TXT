Bitstream Vera Fonts - April 16, 2003
=====================================

The version number of these fonts is 1.10 to distinguish them from the
beta test fonts.

Note that the Vera copyright is incorporated in the fonts themselves.
The License field in the fonts contains the copyright license as it
appears below. The TrueType copyright field is not large enough to
contain the full license, so the license is incorporated (as you might
think if you thought about it) into the license field, which
unfortunately can be obscure to find.  (In pfaedit, see: Element->Font
Info->TTFNames->License).

Our apologies for it taking longer to complete the fonts than planned.
Beta testers requested a tighter line spacing (less leading) and Jim
Lyles redesigned Vera's accents to bring its line spacing to more
typical of other fonts.  This took additional time and effort.  Our
thanks to Jim for this effort above and beyond the call of duty.

There are four monospace and sans faces (normal, oblique, bold, bold
oblique) and two serif faces (normal and bold). Fontconfig/Xft2 (see
www.fontconfig.org) can artificially oblique the serif faces for you:
this loses hinting and distorts the faces slightly, but is visibly
different than normal and bold, and reasonably pleasing.

On systems with fontconfig 2.0 or 2.1 installed, making your sans,
serif and monospace fonts default to these fonts is very easy.  Just
drop the file local.conf into your /etc/fonts directory.  This will
make the Bitstream fonts your default fonts for all applications using
fontconfig (if sans, serif, or monospace names are used, as they often
are as default values in many desktops). The XML in local.conf may
need modification to enable subpixel decimation, if appropriate,
however, the commented out phrase does so for XFree86 4.3, in the case
that the server does not have sufficient information to identify the
use of a flat panel.  Fontconfig 2.2 adds Vera to the list of font
families and will, by default use it as the default sans, serif and
monospace fonts.

During the testing of the final Vera fonts, we learned that screen
fonts in general are only typically hinted to work correctly at
integer pixel sizes.  Vera is coded internally for integer sizes only.
We need to investigate further to see if there are commonly used fonts
that are hinted to be rounded but are not rounded to integer sizes due
to oversights in their coding.

Most fonts work best at 8 pixels and below if anti-aliased only, as
the amount of work required to hint well at smaller and smaller sizes
becomes astronomical.  GASP tables are typically used to control
whether hinting is used or not, but Freetype/Xft does not currently
support GASP tables (which are present in Vera).

To mitigate this problem, both for Vera and other fonts, there will be
(very shortly) a new fontconfig 2.2 release that will, by default not
apply hints if the size is below 8 pixels. if you should have a font
that in fact has been hinted more agressively, you can use fontconfig
to note this exception. We believe this should improve many hinted
fonts in addition to Vera, though implemeting GASP support is likely
the right long term solution.

Font rendering in Gnome or KDE is the combination of algorithms in
Xft2 and Freetype, along with hinting in the fonts themselves. It is
vital to have sufficient information to disentangle problems that you
may observe.

Note that having your font rendering system set up correctly is vital
to proper judgement of problems of the fonts:

    * Freetype may or may not be configured to in ways that may
      implement execution of possibly patented (in some parts of the world)
      TrueType hinting algorithms, particularly at small sizes.  Best
      results are obtained while using these algorithms.

    * The freetype autohinter (used when the possibly patented
      algorithms are not used) continues to improve with each release. If
      you are using the autohinter, please ensure you are using an up to
      date version of freetype before reporting problems.

    * Please identify what version of freetype you are using in any
      bug reports, and how your freetype is configured.

    * Make sure you are not using the freetype version included in
      XFree86 4.3, as it has bugs that significantly degrade most fonts,
      including Vera. if you build XFree86 4.3 from source yourself, you may
      have installed this broken version without intending it (as I
      did). Vera was verified with the recently released Freetype 2.1.4. On
      many systems, 'ldd" can be used to see which freetype shared library
      is actually being used.

    * Xft/X Render does not (yet) implement gamma correction.  This
      causes significant problems rendering white text on a black background
      (causing partial pixels to be insufficiently shaded) if the gamma of
      your monitor has not been compensated for, and minor problems with
      black text on a while background.  The program "xgamma" can be used to
      set a gamma correction value in the X server's color pallette. Most
      monitors have a gamma near 2.

    * Note that the Vera family uses minimal delta hinting. Your
      results on other systems when not used anti-aliased may not be
      entirely satisfying. We are primarily interested in reports of
      problems on open source systems implementing Xft2/fontconfig/freetype
      (which implements antialiasing and hinting adjustements, and
      sophisticated subpixel decimation on flatpanels).  Also, the
      algorithms used by Xft2 adjust the hints to integer widths and the
      results are crisper on open source systems than on Windows or
      MacIntosh.

    * Your fontconfig may (probably does) predate the release of
      fontconfig 2.2, and you may see artifacts not present when the font is
      used at very small sizes with hinting enabled. "vc-list -V" can be
      used to see what version you have installed.

We believe and hope that these fonts will resolve the problems
reported during beta test.  The largest change is the reduction of
leading (interline spacing), which had annoyed a number of people, and
reduced Vera's utility for some applcations.  The Vera monospace font
should also now make '0' and 'O' and '1' and 'l' more clearly
distinguishable.

The version of these fonts is version 1.10.  Fontconfig should be
choosing the new version of the fonts if both the released fonts and
beta test fonts are installed (though please discard them: they have
names of form tt20[1-12]gn.ttf).  Note that older versions of
fontconfig sometimes did not rebuild their cache correctly when new
fonts are installed: please upgrade to fontconfig 2.2. "fc-cache -f"
can be used to force rebuilding fontconfig's cache files.

If you note problems, please send them to fonts at gnome dot org, with
exactly which face and size and unicode point you observe the problem
at. The xfd utility from XFree86 CVS may be useful for this (e.g. "xfd
-fa sans").  A possibly more useful program to examine fonts at a
variety of sizes is the "waterfall" program found in Keith Packard's
CVS.

        $ cvs -d :pserver:anoncvs@keithp.com:/local/src/CVS login
        Logging in to :pserver:anoncvs@keithp.com:2401/local/src/CVS
        CVS password: <hit return>
        $ cvs -d :pserver:anoncvs@keithp.com:/local/src/CVS co waterfall
        $ cd waterfall
        $ xmkmf -a
        $ make
        # make install
        # make install.man

Again, please make sure you are running an up-to-date freetype, and
that you are only examining integer sizes.

Reporting Problems
==================

Please send problem reports to fonts at gnome org, with the following
information:

   1. Version of Freetype, Xft2 and fontconfig
   2. Whether TT hinting is being used, or the autohinter
   3. Application being used
   4. Character/Unicode code point that has problems (if applicable)
   5. Version of which operating system
   6. Please include a screenshot, when possible.

Please check the fonts list archives before reporting problems to cut
down on duplication.
