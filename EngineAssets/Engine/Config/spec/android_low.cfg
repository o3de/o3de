sys_spec_Full=1

-- Cap frame rate at 30fps
sys_maxfps=30
r_vsync=0

-- Enable framebufferfetch(256bpp) or pls if applicable
r_EnableGMEMPath=1

-- Skip the native upscale as a second upscale already occurs
r_SkipNativeUpscale=1

-- Default of 3 allocates all shaders (potentially >150 MB)
-- 1 is most memory efficient but definitely causes hitches when converting HLSL
-- shaders.  Recommend 1 during dev, and 3 with optimized caches for release.
r_ShadersPreactivate=1

sys_job_system_max_worker=2
sys_streaming_in_blocks=1

sys_streaming_memory_budget=512

-- This allows the generation of reflections for the ocean water. Without it, the water looks really dark.
e_recursion=0
e_CheckOcclusion=1

r_Fur=0

-- Water occlusion queries crash in some OpenGL ES 3.0 devices
e_HwOcclusionCullingWater = 0
az_Asset_EnableAsyncMeshLoading=0

------------------------
-- Misc. memory buffers
------------------------
e_GeomCacheBufferSize=0
e_CheckOcclusionQueueSize=512
e_CheckOcclusionOutputQueueSize=1024

------------------------
-- Animation
------------------------
ca_MemoryDefragPoolSize=33554432
ca_StreamCHR=1

------------------------
-- sys_spec_objectdetail
------------------------
e_Dissolve=2
e_LodRatio=5
e_ViewDistRatioDetail=19


------------------------
-- sys_spec_shading
------------------------
r_VisAreaClipLightsPerPixel=0


------------------------
-- sys_spec_textureresolution
------------------------
r_TexturesstreamingMinUsableMips=6


-- Due to performance issues with incremental cached shadow map updates, enable this to prevent us from culling every object in the world vs each cached shadow map each frame. 
-- If no objects are present in the level this will eliminate the need to clear the massive cached textures each frame.
-- Set to 2 to allow distance-based updates along with script-based updates for the cached shadow maps
e_ShadowsCacheRequireManualUpdate = 2

-- Sort ligths since we have limited space in the shadowmap pool texture
r_DeferredShadingSortLights = 3
r_ClearGMEMGBuffer=1

--Use an optimized pixel format for the lighting rendertargets during the lighting pass. 
r_DeferredShadingLBuffersFmt = 2