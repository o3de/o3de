/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */
#include <TerrainSrg.azsli>
#include <TerrainMaterialSrg.azsli>
#include "ClipmapComputeHelpers.azsli"
#include "TerrainMacroHelpers.azsli"

ShaderResourceGroup PassSrg : SRG_PerPass_WithFallback
{
    RWTexture2DArray<float4> m_macroColorClipmaps;
    RWTexture2DArray<float2> m_macroNormalClipmaps;
}

[numthreads(32,32,1)]
void MainCS(
    uint3 dispatchThreadID : SV_DispatchThreadID)
{
    uint2 pixelPosition = dispatchThreadID.xy;

    for (uint clipmapLevel = 0; clipmapLevel < TerrainSrg::m_clipmapData.m_macroClipmapStackSize; ++clipmapLevel)
    {
        uint3 texelIndex = uint3(dispatchThreadID.xy, clipmapLevel);

        float2 worldPosition = GetCurrentWorldPositionFromMacroClipmaps(pixelPosition, clipmapLevel);
        float clipmapScaleInv = GetMacroClipmapScaleInv(clipmapLevel);
        float2 positionDdx = ddxPosition(TerrainSrg::m_clipmapData.m_macroClipmapMaxRenderRadius, clipmapScaleInv);
        float2 positionDdy = ddyPosition(TerrainSrg::m_clipmapData.m_macroClipmapMaxRenderRadius, clipmapScaleInv);

        float3 macroColor;
        float3 macroNormal;
        SampleMacroTexture(worldPosition, positionDdx, positionDdy, macroColor, macroNormal);

        PassSrg::m_macroColorClipmaps[texelIndex] = float4(macroColor, 1.0);
        PassSrg::m_macroNormalClipmaps[texelIndex] = macroNormal.xy;
    }
}

