{#
Copyright (c) Contributors to the Open 3D Engine Project.
For complete copyright and license terms please see the LICENSE at the root of this distribution.

SPDX-License-Identifier: Apache-2.0 OR MIT
#}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This code was produced with AzAutoGen, any modifications made will not be preserved.
// If you need to modify this code see:
//
// Gems\ScriptCanvas\Code\Include\ScriptCanvas\AutoGen\ScriptCanvasFunction_Header.jinja
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include <AzCore/RTTI/TypeInfo.h>
#include <AzCore/Serialization/SerializeContext.h>
#include <AzCore/Serialization/EditContext.h>
#include <AzCore/RTTI/BehaviorContext.h>


#include <ScriptCanvas/AutoGen/ScriptCanvasAutoGenRegistry.h>

{% for ScriptCanvas in dataFiles %}

{% if ScriptCanvas.attrib['Include'] is defined %}
#include <{{ ScriptCanvas.attrib['Include'] }}>
{% endif %}


{%  for Library in ScriptCanvas %}

{% if Library.attrib['Include'] is defined %}
#include <{{ Library.attrib['Include'] }}>
{% endif %}

{% set qualifiedNamespace = Library.attrib['Namespace'] %}
{% set parts = qualifiedNamespace.split("::") %}
{% set className = parts[-1] %}

{% if Library.attrib['Name'] is defined %}
{% set className = Library.attrib['Name'] %}
{% endif %}

namespace {{ qualifiedNamespace }}
{

class {{className}}_Reflection
{
public:

    {{className}}_Reflection() {}
    virtual ~{{className}}_Reflection() {}

    static void Reflect(AZ::ReflectContext* context);
};

SCRIPTCANVAS_REGISTER_EXTERN({{className}}_Reflection);

}

{%   endfor %}
{% endfor %}