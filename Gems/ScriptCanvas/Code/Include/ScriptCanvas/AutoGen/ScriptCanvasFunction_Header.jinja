{#
Copyright (c) Contributors to the Open 3D Engine Project.
For complete copyright and license terms please see the LICENSE at the root of this distribution.

SPDX-License-Identifier: Apache-2.0 OR MIT
#}

{% import 'ScriptCanvas_Macros.jinja' as macros %}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This code was produced with AzAutoGen, any modifications made will not be preserved.
// If you need to modify this code see:
//
// Gems\ScriptCanvas\Code\Include\ScriptCanvas\AutoGen\ScriptCanvasFunction_Source.jinja
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <AzCore/RTTI/BehaviorContext.h>
#include <ScriptCanvasAutoGenRegistry.h>

{% for ScriptCanvas in dataFiles %}
{% for Library in ScriptCanvas%}

{{- macros.Required('Include', Library, Library) -}}
{{- macros.Required('Name', Library, Library) -}}

{% set className = macros.CleanName('ScriptCanvas' + Library.attrib['Name']) %}
{% set namespaceList = [] %}
{% if Library.attrib['Namespace'] is defined and Library.attrib['Namespace'] %}
{% set namespaceList = macros.CleanName(Library.attrib['Namespace']).split('::') %}
{% endif %}

{% for namespace in namespaceList %}
namespace {{namespace}}
{
{% endfor %}

class {{className}}
    : public ScriptCanvas::IScriptCanvasFunctionRegistry
{
public:
    {{className}}();

    virtual ~{{className}}();
 
    void Reflect(AZ::ReflectContext* context) override;
};

{% for namespace in namespaceList %}
}
{% endfor %}

{{ macros.ReportErrors() }}

{% endfor %}
{% endfor %}
