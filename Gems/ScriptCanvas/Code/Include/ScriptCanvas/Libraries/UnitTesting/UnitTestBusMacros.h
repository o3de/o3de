/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#pragma once

#define SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, TYPE, SUFFIX)\
    PREFIX NAME(const Data::TYPE##Type candidate, const Data::TYPE##Type reference, const Report& report) SUFFIX;
    
#define SCRIPT_CANVAS_UNIT_TEST_EQUALITY_OVERLOAD(NAME, PREFIX, SUFFIX)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, AABB, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Boolean, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, CRC, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Color, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, EntityID, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Matrix3x3, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Matrix4x4, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Number, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, OBB, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Plane, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Quaternion, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, String, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Transform, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Vector2, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Vector3, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Vector4, SUFFIX);

#define SCRIPT_CANVAS_UNIT_TEST_EQUALITY_OVERLOAD_DECLARATIONS(NAME)\
    SCRIPT_CANVAS_UNIT_TEST_EQUALITY_OVERLOAD(NAME, virtual void, =0)

#define SCRIPT_CANVAS_UNIT_TEST_EQUALITY_OVERLOAD_OVERRIDES(NAME) SCRIPT_CANVAS_UNIT_TEST_EQUALITY_OVERLOAD(NAME, void, override)

#define SCRIPT_CANVAS_UNIT_TEST_COMPARE_OVERLOAD(NAME, PREFIX, SUFFIX)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Number, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, String, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Vector2, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Vector3, SUFFIX);\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_DECLARATION_TYPE(PREFIX, NAME, Vector4, SUFFIX);

#define SCRIPT_CANVAS_UNIT_TEST_COMPARE_OVERLOAD_DECLARATIONS(NAME)\
    SCRIPT_CANVAS_UNIT_TEST_COMPARE_OVERLOAD(NAME, virtual void, =0)

#define SCRIPT_CANVAS_UNIT_TEST_COMPARE_OVERLOAD_OVERRIDES(NAME)\
    SCRIPT_CANVAS_UNIT_TEST_COMPARE_OVERLOAD(NAME, void, override)

#define SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(TYPE, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    inline void CLASS_NAME::FUNCTION_NAME(const Data::TYPE##Type candidate, const Data::TYPE##Type reference, const Report& report)\
    {\
        BINARY_OP(candidate, reference);\
        Checkpoint(AZStd::string::format("%s: %s", #FUNCTION_NAME, report.begin()));\
    }

#define SCRIPT_CANVAS_UNIT_TEST_EQUALITY_OVERLOAD_IMPLEMENTATIONS(CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(AABB, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Boolean, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(CRC, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Color, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(EntityID, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Matrix3x3, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Matrix4x4, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(OBB, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Plane, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Quaternion, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(String, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Transform, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Vector2, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Vector3, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Vector4, CLASS_NAME, FUNCTION_NAME, BINARY_OP)

#define SCRIPT_CANVAS_UNIT_TEST_COMPARE_OVERLOAD_IMPLEMENTATIONS(CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Number, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(String, CLASS_NAME, FUNCTION_NAME, BINARY_OP)

#define SCRIPT_CANVAS_UNIT_TEST_VECTOR_COMPARE_OVERLOAD_IMPLEMENTATIONS(CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Vector2, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Vector3, CLASS_NAME, FUNCTION_NAME, BINARY_OP)\
    SCRIPT_CANVAS_UNIT_TEST_OVERLOAD_IMPLEMENTATION(Vector4, CLASS_NAME, FUNCTION_NAME, BINARY_OP)
