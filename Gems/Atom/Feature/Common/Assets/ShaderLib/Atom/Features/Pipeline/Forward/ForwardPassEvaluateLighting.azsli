/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#pragma once

#ifndef EvaluateLighting
#define EvaluateLighting EvaluateLighting_ForwardPass
#endif

#include <Atom/Features/Pipeline/Forward/ForwardPassDirectLighting.azsli>
#include <Atom/Features/Pipeline/Forward/ForwardPassDecals.azsli>
#include <Atom/Features/Pipeline/Forward/ForwardPassIbl.azsli>


LightingData EvaluateLighting_ForwardPass(Surface surface, float4 screenPosition, float3 viewPositions[MAX_SHADING_VIEWS])
{
    LightingData lightingData;
    InitializeLightingData(surface, viewPositions, lightingData);

    // Light iterator
    LightCullingTileIterator tileIterator;
#if ENABLE_LIGHT_CULLING
    tileIterator.Init(screenPosition, PassSrg::m_lightListRemapped, PassSrg::m_tileLightData);
#else
    tileIterator.InitNoCulling();
#endif

    // Apply Decals
    ApplyDecals_ForwardPass(tileIterator, surface);

    // Apply Direct Lighting
    ApplyDirectLighting_ForwardPass(surface, lightingData, screenPosition, tileIterator);

    // Apply Image Based Lighting (IBL)
    ApplyIbl_ForwardPass(surface, lightingData);

    FinalizeLightingData(surface, lightingData);
    return lightingData;
}

