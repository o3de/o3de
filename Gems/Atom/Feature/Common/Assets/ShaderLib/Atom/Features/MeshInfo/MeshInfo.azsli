/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */
#pragma once

enum MeshInfoFlags
{
    SkinnedMesh = 1             // true if the mesh is animated
};


// This struct needs to be padded to 16 byte in both azsl and c++
struct MeshInfo
{
    // Buffer indices                 // 16 byte (float4) offsets
    int m_indexBufferIndex;           // [0.0]
    int m_positionBufferIndex;        // [0.1]
    int m_normalBufferIndex;          // [0.2]
    int m_uv0BufferIndex;             // [0.3]
    int m_uv1BufferIndex;             // [1.0]
    int m_tangentBufferIndex;         // [1.1]
    int m_bitangentBufferIndex;       // [1.2]

    // Buffer start offsets
    uint m_indexBufferByteOffset;     // [1.3]
    uint m_positionBufferByteOffset;  // [2.0]
    uint m_normalBufferByteOffset;    // [2.1]
    uint m_uv0BufferByteOffset;       // [2.2]
    uint m_uv1BufferByteOffset;       // [2.3]
    uint m_tangentBufferByteOffset;   // [3.0]
    uint m_bitangentBufferByteOffset; // [3.1]

    // Buffer formats
    uint m_indexFormat;               // [3.2]
    uint m_positionFormat;            // [3.3]
    uint m_normalFormat;              // [4.0]
    uint m_uv0Format;                 // [4.1]
    uint m_uv1Format;                 // [4.2]
    uint m_tangentFormat;             // [4.3]
    uint m_bitangentFormat;           // [5.0]

    // Other mesh paramteters
    uint m_objectIdForTransform;      // [5.1]
    uint m_lightingChannels;          // [5.2]
    uint m_materialTypeId;            // [5.3]
    uint m_materialInstanceId;        // [6.0]
    uint m_uvStreamTangentBitmask;    // [6.1]
    uint m_flags;                     // [6.2]
    uint m_pad;                       // [6.3]
};

