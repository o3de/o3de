/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#pragma once

#include <scenesrg.srgi>
#include <Atom/Features/PBR/Lights/ReflectionProbeData.azsli>

#ifndef MATERIAL_PIPELINE_OBJECT_SRG_MEMBERS
#define MATERIAL_PIPELINE_OBJECT_SRG_MEMBERS
#endif

ShaderResourceGroup ObjectSrg : SRG_PerObject
{
    uint m_objectId;

    //! Returns the matrix for transforming points from Object Space to World Space.
    float4x4 GetWorldMatrix()
    {
        return SceneSrg::GetObjectToWorldMatrix(m_objectId);
    }

    //! Returns the inverse-transpose of the world matrix.
    //! Commonly used to transform normals while supporting non-uniform scale.
    float3x3 GetWorldMatrixInverseTranspose()
    {
        return SceneSrg::GetObjectToWorldInverseTransposeMatrix(m_objectId);
    }

    float4x4 GetWorldMatrixPrev()
    {
        return SceneSrg::GetObjectToWorldMatrixPrev(m_objectId);
    }

    ReflectionProbeData m_reflectionProbeData;
    TextureCube m_reflectionProbeCubeMap;

    uint m_lightingChannelMask;
    MATERIAL_PIPELINE_OBJECT_SRG_MEMBERS
}
