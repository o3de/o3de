/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#include <scenesrg_all.srgi>
#include <Atom/Features/PostProcessing/PostProcessUtil.azsli>
#include "MotionBlur.azsli"

ShaderResourceGroup PassSrg : SRG_PerPass
{
    Texture2D<float2> m_inputVelocity;
    RWTexture2D<float2> m_outputVelocity;
}

// This shader applies a 3x3 max filter to tile max velocities, 
// which is the second pass, originally called `Tile Neighborhood`. 
[numthreads(8, 8, 1)]
void MainCS(
    uint3 dispatchThreadID : SV_DispatchThreadID, 
    uint3 groupID : SV_GroupID, 
    uint groupIndex : SV_GroupIndex)
{
    uint2 outPixel = dispatchThreadID.xy;
    uint2 dimensions;
    
    PassSrg::m_outputVelocity.GetDimensions(dimensions.x, dimensions.y);

    if (outPixel.x >= dimensions.x || outPixel.y >= dimensions.y)
    {
        return;
    }
    
    float2 maxVelocity = float2(0, 0);
    [unroll]
    for(int i = -1; i <= 1; i++) 
    {
        [unroll]
        for(int j = -1; j <= 1; j++) 
        {
            if (outPixel.x + i >= dimensions.x || outPixel.y + j >= dimensions.y || (int)outPixel.x + i < 0 || (int)outPixel.y + j < 0)
            {
                continue;
            }

            float2 sampleVelocity = PassSrg::m_inputVelocity[outPixel + uint2(i, j)];
            maxVelocity = vmax(maxVelocity, sampleVelocity);
        }
    }

    PassSrg::m_outputVelocity[outPixel] = maxVelocity;
}
