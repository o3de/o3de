/*
* All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
* its licensors.
*
* For complete copyright and license terms please see the LICENSE at the root of this
* distribution (the "License"). All use of this software is governed by the License,
* or, if provided, by the license below or the license accompanying this file. Do not
* remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*
*/

#include <scenesrg.srgi>
#include <viewsrg.srgi>

#include <Atom/Features/PBR/DefaultObjectSrg.azsli>
#include <Atom/RPI/ShaderResourceGroups/DefaultDrawSrg.azsli>

struct VSOutput
{
    float4 m_position : SV_Position;
    float3 m_worldPos : TEXCOORD0;
    float3 m_worldPosPrev: TEXCOORD1;
};

struct PSOutput
{
    float2 m_motion : SV_Target0;
};

PSOutput MainPS(VSOutput IN)
{
    PSOutput OUT;

    // Current clip position
    float4 clipPos = mul(ViewSrg::m_viewProjectionMatrix, float4(IN.m_worldPos, 1.0));
    
    // Reprojected last frame's clip position, for skinned mesh it also implies last key frame
    float4 clipPosPrev = mul(ViewSrg::m_viewProjectionPrevMatrix, float4(IN.m_worldPosPrev, 1.0));

    float2 motion = (clipPos.xy / clipPos.w - clipPosPrev.xy / clipPosPrev.w) * 0.5;

    OUT.m_motion = motion;
    
    // Flip y to line up with uv coordinates
    OUT.m_motion.y = -OUT.m_motion.y;
    
    return OUT;
}
