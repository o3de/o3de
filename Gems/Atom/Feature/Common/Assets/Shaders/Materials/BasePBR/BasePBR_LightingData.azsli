/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#pragma once

// This #define magic lets you use the LightingData class in this file without making it the final LightingData
// used in your shader. Simply #define LightingData to your custom definition before including this file
// 
#ifndef LightingData
#define LightingData        LightingData_BasePBR
#endif

#include <viewsrg_all.srgi>
#include <Atom/Features/Debug.azsli>
#include <Atom/Features/PBR/LightingUtils.azsli>
#include <Atom/Features/PBR/LightingOptions.azsli>

class LightingData_BasePBR
{
    // Lighting outputs
    real3 diffuseLighting;
    real3 specularLighting;

    // Factors for the amount of diffuse and specular lighting applied
    real3 diffuseResponse;
   
    // Shrink (absolute) offset towards the normal opposite direction to ensure correct shadow map projection
    real shrinkFactor;

    // Normalized direction from surface to camera
    float3 dirToCamera;
    
    // Scaling term to approximate multiscattering contribution in specular BRDF
    real3 multiScatterCompensation;

    // Lighting emitted from the surface
    real3 emissiveLighting;

    // BRDF texture values
    real2 brdf;

    // Normal . View
    float NdotV;

#if ENABLE_TRANSMISSION
    real3 translucentBackLighting;
#endif

    // Occlusion factors (0 = dark, 1 = light)
    real diffuseAmbientOcclusion;
    real specularOcclusion;
    float GetSpecularNdotV() { return NdotV; }
};

