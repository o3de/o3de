/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

 #pragma once

#include "../MaterialInputs/AlphaInput.azsli"

real GetAlphaAndClip(const MaterialParameters params, float2 uvs[UvSetCount], float4 uvDxDy = float4(0.0f, 0.0f, 0.0f, 0.0f), bool customDerivatives = false)
{
    // Alpha
    float2 baseColorUV = uvs[params.m_baseColorMapUvIndex];
    float2 opacityUV = uvs[params.m_opacityMapUvIndex];
    real alpha = SampleAlpha(GetMaterialTexture(params.m_baseColorMap), GetMaterialTexture(params.m_opacityMap), baseColorUV, opacityUV, GetMaterialTextureSampler(), o_opacity_source, uvDxDy, customDerivatives);
    CheckClipping(alpha, real(params.m_opacityFactor));
    return real(params.m_opacityFactor) * alpha;
}
