/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

// The built-in tangent frame evaluation forwards the tangent frame interpolanted from the vertex
// data streams for UV-index 0. For UV-index 1, the tangent frame is computed from UV surface gradients.
void EvaluateTangentFrame(
    float3 normal,
    float3 worldPosition,
    bool isFrontFace,
    float2 uv,
    int uvIndex,
    // The input tangent and bitangent vectors are optional and used to forward data from interpolants
    float3 IN_tangent,
    float3 IN_bitangent,
    out float3 OUT_tangent,
    out float3 OUT_bitangent)
{
    if (DrawSrg::GetTangentAtUv(uvIndex) == 0)
    {
        OUT_tangent = IN_tangent;
        OUT_bitangent = IN_bitangent;
    }
    else
    {
        SurfaceGradientNormalMapping_Init(normal, worldPosition, !isFrontFace);
        SurfaceGradientNormalMapping_GenerateTB(uv, OUT_tangent, OUT_bitangent);
    }
}
