/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#pragma once

// This #define magic allows you to use the EvaluateVertexGeometry function in this file without making it the final
// EvaluateVertexGeometry used in your shader. Simply #define EvaluateVertexGeometry before including this file
//
#ifndef EvaluateVertexGeometry
#define EvaluateVertexGeometry(IN)      EvaluateVertexGeometry_EnhancedPBR(IN)
#endif

#include "../BasePBR/BasePBR_VertexEval.azsli"
#include "../MaterialFunctions/StandardTransformDetailUvs.azsli"

VsOutput EvaluateVertexGeometry_EnhancedPBR(
    float3 position,
    float3 normal,
    float4 tangent,
    float2 uv0,
    float2 uv1)
{
    // BasePBRP
    VsOutput output = EvaluateVertexGeometry_BasePBR(position, normal, tangent, uv0, uv1);

    // Detail UVs
    float2 detailUvs[UvSetCount] = { uv0, uv1 };
    TransformDetailUvs(detailUvs, output.detailUvs);

    return output;
}

VsOutput EvaluateVertexGeometry_EnhancedPBR(VsInput IN)
{
    return EvaluateVertexGeometry_EnhancedPBR(
        IN.position,
        IN.normal,
        IN.tangent,
        IN.uv0,
        IN.uv1);
}
