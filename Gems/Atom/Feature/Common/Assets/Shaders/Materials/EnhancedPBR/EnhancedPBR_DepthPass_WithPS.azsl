/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

// Shader Resource Groups
#include <scenesrg.srgi>
#include <viewsrg.srgi>
#include "EnhancedPBR_MaterialSrg.azsli"
#include <Atom/Features/PBR/DefaultObjectSrg.azsli>
#include <Atom/RPI/ShaderResourceGroups/DefaultDrawSrg.azsli>

#include "../MaterialFunctions/EvaluateTangentFrame.azsli"
#include "../MaterialFunctions/ParallaxDepth.azsli"
#include "../MaterialFunctions/StandardGetAlphaAndClip.azsli"

COMMON_OPTIONS_PARALLAX()

// Callback function for ParallaxMapping.azsli
DepthResult GetDepth(float2 uv, float2 uv_ddx, float2 uv_ddy)
{
    return SampleDepthFromHeightmap(MaterialSrg::m_heightmap, MaterialSrg::m_sampler, uv, uv_ddx, uv_ddy);
}

bool ShouldHandleParallax()
{
    // Parallax mapping's non uniform uv transformations break screen space subsurface scattering, disable it when subsurface scattering is enabled.
    return !o_enableSubsurfaceScattering && o_parallax_feature_enabled && o_useHeightmap;
}

bool ShouldHandleParallaxInDepthShaders()
{
    // The depth pass shaders need to calculate parallax when the result could affect the depth buffer, or when
    // parallax could affect texel clipping.
    return ShouldHandleParallax() && (o_parallax_enablePixelDepthOffset || o_opacity_mode == OpacityMode::Cutout);
}

#define ENABLE_ALPHA_CLIP 1
#include "../DepthPass_WithPS.azsli"
