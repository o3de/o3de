/*
* All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
* its licensors.
*
* For complete copyright and license terms please see the LICENSE at the root of this
* distribution (the "License"). All use of this software is governed by the License,
* or, if provided, by the license below or the license accompanying this file. Do not
* remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*
*/

#include <scenesrg.srgi>
#include <viewsrg.srgi>

#include <Atom/Features/PostProcessing/FullscreenVertex.azsli>
#include <Atom/Features/PostProcessing/FullscreenPixelInfo.azsli>
#include <Atom/Features/SrgSemantics.azsli>
#include "ReflectionScreenSpaceBlurCommon.azsli"

ShaderResourceGroup PassSrg : SRG_PerPass
{
    RWTexture2D<float4> m_input;
    RWTexture2D<float4> m_output;
    uint m_imageWidth;
    uint m_imageHeight;
    float m_outputScale;
}

#include <Atom/RPI/ShaderResourceGroups/DefaultDrawSrg.azsli>

// Pixel Shader
PSOutput MainPS(VSOutput IN)
{
    // vertical blur uses coordinates from the mip0 input image
    uint2 coords = IN.m_position.xy * PassSrg::m_outputScale;
    float3 result = GaussianFilter(coords, TexelOffsetsV, PassSrg::m_input);

    PSOutput OUT;
    OUT.m_color = float4(result, 1.0f);
    return OUT;
}
