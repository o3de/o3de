{
    "description": "Material Type tailored for rendering skin, with support for blended wrinkle maps that work with animated vertex blend shapes.",
    "version": 4,
    "versionUpdates": [
        {
            "toVersion": 4,
            "actions": [
                {"op": "rename", "from": "detailUV.center", "to": "detailLayerGroup.detailUV.center"},
                {"op": "rename", "from": "detailUV.tileU", "to": "detailLayerGroup.detailUV.tileU"},
                {"op": "rename", "from": "detailUV.tileV", "to": "detailLayerGroup.detailUV.tileV"},
                {"op": "rename", "from": "detailUV.offsetU", "to": "detailLayerGroup.detailUV.offsetU"},
                {"op": "rename", "from": "detailUV.offsetV", "to": "detailLayerGroup.detailUV.offsetV"},
                {"op": "rename", "from": "detailUV.rotateDegrees", "to": "detailLayerGroup.detailUV.rotateDegrees"},
                {"op": "rename", "from": "detailUV.scale", "to": "detailLayerGroup.detailUV.scale"}
            ]
        }
    ],
    "propertyLayout": {
        "propertyGroups": [
            {
                "name": "baseColor",
                "displayName": "Base Color",
                "description": "Properties for configuring the surface reflected color for dielectrics or reflectance values for metals.",
                "properties": [
                    {
                        "name": "color",
                        "displayName": "Color",
                        "description": "Color is displayed as sRGB but the values are stored as linear color.",
                        "type": "Color",
                        "defaultValue": [ 1.0, 1.0, 1.0 ],
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_baseColor"
                        }
                    },
                    {
                        "name": "factor",
                        "displayName": "Factor",
                        "description": "Strength factor for scaling the base color values. Zero (0.0) is black, white (1.0) is full color.",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_baseColorFactor"
                        }
                    },
                    {
                        "name": "textureMap",
                        "displayName": "Texture",
                        "description": "Base color texture map",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_baseColorMap"
                        }
                    },
                    {
                        "name": "useTexture",
                        "displayName": "Use Texture",
                        "description": "Whether to use the texture.",
                        "type": "Bool",
                        "defaultValue": true
                    },
                    {
                        "name": "textureMapUv",
                        "displayName": "UV",
                        "description": "Base color map UV set",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Unwrapped",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_baseColorMapUvIndex"
                        }
                    },
                    {
                        "name": "textureBlendMode",
                        "displayName": "Texture Blend Mode",
                        "description": "Selects the equation to use when combining Color, Factor, and Texture.",
                        "type": "Enum",
                        "enumValues": [ "Multiply", "LinearLight", "Lerp", "Overlay" ],
                        "defaultValue": "Multiply",
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_baseColorTextureBlendMode"
                        }
                    }
                ]
            },
            {
                "name": "roughness",
                "displayName": "Roughness",
                "description": "Properties for configuring how rough the surface appears.",
                "properties": [
                    {
                        "name": "textureMap",
                        "displayName": "Texture",
                        "description": "Texture for defining surface roughness.",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_roughnessMap"
                        }
                    },
                    {
                        "name": "useTexture",
                        "displayName": "Use Texture",
                        "description": "Whether to use the texture, or just default to the Factor value.",
                        "type": "Bool",
                        "defaultValue": true
                    },
                    {
                        "name": "textureMapUv",
                        "displayName": "UV",
                        "description": "Roughness map UV set",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Unwrapped",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_roughnessMapUvIndex"
                        }
                    },
                    {
                        // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                        "name": "lowerBound",
                        "displayName": "Lower Bound",
                        "description": "The roughness value that corresponds to black in the texture.",
                        "type": "Float",
                        "defaultValue": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_roughnessLowerBound"
                        }
                    },
                    {
                        // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                        "name": "upperBound",
                        "displayName": "Upper Bound",
                        "description": "The roughness value that corresponds to white in the texture.",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_roughnessUpperBound"
                        }
                    },
                    {
                        // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                        "name": "factor",
                        "displayName": "Factor",
                        "description": "Controls the roughness value",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_roughnessFactor"
                        }
                    }
                ]
            },
            {
                "name": "specularF0",
                "displayName": "Specular Reflectance f0",
                "description": "The constant f0 represents the specular reflectance at normal incidence (Fresnel 0 Angle). Used to adjust reflectance of non-metal surfaces.",
                "properties": [
                    {
                        "name": "factor",
                        "displayName": "Factor",
                        "description": "The default IOR is 1.5, which gives you 0.04 (4% of light reflected at 0 degree angle for dielectric materials). F0 values lie in the range 0-0.08, so that is why the default F0 slider is set on 0.5.",
                        "type": "Float",
                        "defaultValue": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_specularF0Factor"
                        }
                    },
                    {
                        "name": "textureMap",
                        "displayName": "Texture",
                        "description": "Texture for defining surface reflectance.",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_specularF0Map"
                        }
                    },
                    {
                        "name": "useTexture",
                        "displayName": "Use Texture",
                        "description": "Whether to use the texture, or just default to the Factor value.",
                        "type": "Bool",
                        "defaultValue": true
                    },
                    {
                        "name": "textureMapUv",
                        "displayName": "UV",
                        "description": "Specular reflection map UV set",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Unwrapped",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_specularF0MapUvIndex"
                        }
                    },
                    // Consider moving this to the "general" group to be consistent with StandardMultilayerPBR
                    {
                        "name": "enableMultiScatterCompensation",
                        "displayName": "Multiscattering Compensation",
                        "description": "Whether to enable multiple scattering compensation.",
                        "type": "Bool",
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_specularF0_enableMultiScatterCompensation"
                        }
                    }
                ]
            },
            {
                "name": "normal",
                "displayName": "Normal",
                "description": "Properties related to configuring surface normal.",
                "properties": [
                    {
                        "name": "textureMap",
                        "displayName": "Texture",
                        "description": "Texture for defining surface normal direction.",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_normalMap"
                        }
                    },
                    {
                        "name": "useTexture",
                        "displayName": "Use Texture",
                        "description": "Whether to use the texture, or just rely on vertex normals.",
                        "type": "Bool",
                        "defaultValue": true
                    },
                    {
                        "name": "textureMapUv",
                        "displayName": "UV",
                        "description": "Normal map UV set",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Unwrapped",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_normalMapUvIndex"
                        }
                    },
                    {
                        "name": "flipX",
                        "displayName": "Flip X Channel",
                        "description": "Flip tangent direction for this normal map.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_flipNormalX"
                        }
                    },
                    {
                        "name": "flipY",
                        "displayName": "Flip Y Channel",
                        "description": "Flip bitangent direction for this normal map.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_flipNormalY"
                        }
                    },
                    {
                        "name": "factor",
                        "displayName": "Factor",
                        "description": "Strength factor for scaling the values",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "softMax": 2.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_normalFactor"
                        }
                    }
                ]
            },
            {
                "name": "detailLayerGroup",
                "displayName": "Detail Layer",
                "description": "Properties for Fine Details Layer.",
                "properties": [
                    {
                        "name": "enableDetailLayer",
                        "displayName": "Enable Detail Layer",
                        "description": "Enable detail layer for fine details and scratches",
                        "type": "Bool",
                        "defaultValue": false
                    },
                    {
                        "name": "blendDetailFactor",
                        "displayName": "Blend Factor",
                        "description": "Scales the overall impact of the detail layer.",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_blendFactor"
                        }
                    },
                    {
                        "name": "blendDetailMask",
                        "displayName": "Blend Mask",
                        "description": "Detailed blend mask for application of the detail maps.",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_blendMask_texture"
                        }
                    },
                    {
                        "name": "enableDetailMaskTexture",
                        "displayName": "    Use Texture",
                        "description": "Enable detail blend mask",
                        "type": "Bool",
                        "defaultValue": true
                    },
                    {
                        "name": "blendDetailMaskUv",
                        "displayName": "    Blend Mask UV",
                        "description": "Which UV set to use for sampling the detail blend mask",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Unwrapped",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_blendMask_uvIndex"
                        }
                    },
                    {
                        "name": "textureMapUv",
                        "displayName": "Detail Map UVs",
                        "description": "Which UV set to use for detail map sampling",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Unwrapped",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_allMapsUvIndex"
                        }
                    },
                    {
                        "name": "enableBaseColor",
                        "displayName": "Enable Base Color",
                        "description": "Enable detail blending for base color",
                        "type": "Bool",
                        "defaultValue": false
                    },
                    {
                        "name": "baseColorDetailMap",
                        "displayName": "    Texture",
                        "description": "Detailed Base Color Texture",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_baseColor_texture"
                        }
                    },
                    {
                        "name": "baseColorDetailBlend",
                        "displayName": "    Blend Factor",
                        "description": "How much to blend the detail layer into the base color.",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_baseColor_factor"
                        }
                    },
                    {
                        "name": "enableNormals",
                        "displayName": "Enable Normal",
                        "description": "Enable detail normal map to be used for fine detail normal such as scratches and small dents",
                        "type": "Bool",
                        "defaultValue": false
                    },
                    {
                        "name": "normalDetailStrength",
                        "displayName": "    Factor",
                        "description": "Strength factor for scaling the Detail Normal",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "softMax": 2.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_normal_factor"
                        }
                    },
                    {
                        "name": "normalDetailMap",
                        "displayName": "    Texture",
                        "description": "Detailed Normal map",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_normal_texture"
                        }
                    },
                    {
                        "name": "normalDetailFlipX",
                        "displayName": "    Flip X Channel",
                        "description": "Flip Detail tangent direction for this normal map.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_normal_flipX"
                        }
                    },
                    {
                        "name": "normalDetailFlipY",
                        "displayName": "    Flip Y Channel",
                        "description": "Flip Detail bitangent direction for this normal map.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_detail_normal_flipY"
                        }
                    }
                ],
                "propertyGroups":  [
                    {
                        "name": "detailUV",
                        "displayName": "UVs",
                        "description": "Properties for modifying detail layer UV.",
                        "properties": [
                            {
                                "name": "center",
                                "displayName": "Center",
                                "description": "Center point for scaling and rotation transformations.",
                                "type": "vector2",
                                "vectorLabels": [ "U", "V" ],
                                "defaultValue": [ 0.5, 0.5 ]
                            },
                            {
                                "name": "tileU",
                                "displayName": "Tile U",
                                "description": "Scales texture coordinates in V.",
                                "type": "float",
                                "defaultValue": 1.0,
                                "step": 0.1
                            },
                            {
                                "name": "tileV",
                                "displayName": "Tile V",
                                "description": "Scales texture coordinates in V.",
                                "type": "float",
                                "defaultValue": 1.0,
                                "step": 0.1
                            },
                            {
                                "name": "offsetU",
                                "displayName": "Offset U",
                                "description": "Offsets texture coordinates in the U direction.",
                                "type": "float",
                                "defaultValue": 0.0,
                                "min": -1.0,
                                "max": 1.0
                            },
                            {
                                "name": "offsetV",
                                "displayName": "Offset V",
                                "description": "Offsets texture coordinates in the V direction.",
                                "type": "float",
                                "defaultValue": 0.0,
                                "min": -1.0,
                                "max": 1.0
                            },
                            {
                                "name": "rotateDegrees",
                                "displayName": "Rotate",
                                "description": "Rotates the texture coordinates (degrees).",
                                "type": "float",
                                "defaultValue": 0.0,
                                "min": -180.0,
                                "max": 180.0,
                                "step": 1.0
                            },
                            {
                                "name": "scale",
                                "displayName": "Scale",
                                "description": "Scales texture coordinates in both U and V.",
                                "type": "float",
                                "defaultValue": 1.0,
                                "step": 0.1
                            }
                        ]
                    }
                ],
                "functors": [
                    {
                        // Maps 2D scale, offset, and rotate properties into a float3x3 transform matrix.
                        "type": "Transform2D",
                        "args": {
                            "transformOrder": [ "Rotate", "Translate", "Scale" ],
                            "centerProperty": "detailUV.center",
                            "scaleProperty": "detailUV.scale",
                            "scaleXProperty": "detailUV.tileU",
                            "scaleYProperty": "detailUV.tileV",
                            "translateXProperty": "detailUV.offsetU",
                            "translateYProperty": "detailUV.offsetV",
                            "rotateDegreesProperty": "detailUV.rotateDegrees",
                            "float3x3ShaderInput": "m_detailUvMatrix",
                            "float3x3InverseShaderInput": "m_detailUvMatrixInverse"
                        }
                    },
                    {
                        "type": "Lua",
                        "args": {
                            "file": "MaterialInputs/DetailMapsCommonFunctor.lua"
                        }
                    }
                ]
            },
            {
                "name": "occlusion",
                "displayName": "Occlusion",
                "description": "Properties for baked textures that represent geometric occlusion of light.",
                "properties": [
                    {
                        "name": "diffuseTextureMap",
                        "displayName": "Diffuse AO",
                        "description": "Texture for defining occlusion area for diffuse ambient lighting.",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_diffuseOcclusionMap"
                        }
                    },
                    {
                        "name": "diffuseUseTexture",
                        "displayName": "    Use Texture",
                        "description": "Whether to use the Diffuse AO map.",
                        "type": "Bool",
                        "defaultValue": true
                    },
                    {
                        "name": "diffuseTextureMapUv",
                        "displayName": "    UV",
                        "description": "Diffuse AO map UV set.",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Tiled",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_diffuseOcclusionMapUvIndex"
                        }
                    },
                    {
                        "name": "diffuseFactor",
                        "displayName": "    Factor",
                        "description": "Strength factor for scaling the values of Diffuse AO",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "softMax": 2.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_diffuseOcclusionFactor"
                        }
                    },
                    {
                        "name": "specularTextureMap",
                        "displayName": "Specular Cavity",
                        "description": "Texture for defining occlusion area for specular lighting.",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_specularOcclusionMap"
                        }
                    },
                    {
                        "name": "specularUseTexture",
                        "displayName": "    Use Texture",
                        "description": "Whether to use the Specular Cavity map.",
                        "type": "Bool",
                        "defaultValue": true
                    },
                    {
                        "name": "specularTextureMapUv",
                        "displayName": "    UV",
                        "description": "Specular Cavity map UV set.",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Tiled",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_specularOcclusionMapUvIndex"
                        }
                    },
                    {
                        "name": "specularFactor",
                        "displayName": "    Factor",
                        "description": "Strength factor for scaling the values of Specular Cavity",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "softMax": 2.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_specularOcclusionFactor"
                        }
                    }
                ]
            },
            {
                "name": "subsurfaceScattering",
                "displayName": "Subsurface Scattering",
                "description": "Properties for configuring subsurface scattering effects.",
                "properties": [
                    {
                        "name": "enableSubsurfaceScattering",
                        "displayName": "Subsurface Scattering",
                        "description": "Enable subsurface scattering feature, this will disable metallic and parallax mapping property due to incompatibility",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableSubsurfaceScattering"
                        }
                    },
                    {
                        "name": "subsurfaceScatterFactor",
                        "displayName": "    Factor",
                        "description": "Strength factor for scaling percentage of subsurface scattering effect applied",
                        "type": "float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_subsurfaceScatteringFactor"
                        }
                    },
                    {
                        "name": "influenceMap",
                        "displayName": "    Influence Map",
                        "description": "Texture for controlling the strength of subsurface scattering",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_subsurfaceScatteringInfluenceMap"
                        }
                    },
                    {
                        "name": "useInfluenceMap",
                        "displayName": "    Use Influence Map",
                        "description": "Whether to use the influence map.",
                        "type": "Bool",
                        "defaultValue": true
                    },
                    {
                        "name": "influenceMapUv",
                        "displayName": "    UV",
                        "description": "Influence map UV set",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Unwrapped",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_subsurfaceScatteringInfluenceMapUvIndex"
                        }
                    },
                    {
                        "name": "scatterColor",
                        "displayName": "    Scatter color",
                        "description": "Color of volume light traveled through",
                        "type": "Color",
                        "defaultValue": [ 1.0, 0.27, 0.13 ]
                    },
                    {
                        "name": "scatterDistance",
                        "displayName": "    Scatter distance",
                        "description": "How far light traveled inside the volume",
                        "type": "float",
                        "defaultValue": 8,
                        "min": 0.0,
                        "softMax": 20.0
                    },
                    {
                        "name": "quality",
                        "displayName": "    Quality",
                        "description": "How much percent of sample will be used for each pixel, more samples improve quality and reduce artifacts, especially when the scatter distance is relatively large, but slow down computation time, 1.0 = full set 200 samples per pixel",
                        "type": "float",
                        "defaultValue": 0.4,
                        "min": 0.2,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_subsurfaceScatteringQuality"
                        }
                    },
                    {
                        "name": "transmissionMode",
                        "displayName": "Transmission",
                        "description": "Algorithm used for calculating transmission",
                        "type": "Enum",
                        "enumValues": [ "None", "ThickObject", "ThinObject" ],
                        "defaultValue": "None",
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_transmission_mode"
                        }
                    },
                    {
                        "name": "thickness",
                        "displayName": "    Thickness",
                        "description": "In thick transmission mode: Normalized global thickness, the maxima between this value (multiplied by thickness map if enabled) and thickness from shadow map (if applicable) will be used as final thickness of pixel\n\nIn thin transmission mode: This value modulates the distance traversed by light inside an object.",
                        "type": "float",
                        "defaultValue": 0.5,
                        "min": 0.0,
                        "max": 1.0
                    },
                    {
                        "name": "thicknessMap",
                        "displayName": "    Thickness Map",
                        "description": "Texture for controlling per pixel thickness",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_transmissionThicknessMap"
                        }
                    },
                    {
                        "name": "useThicknessMap",
                        "displayName": "    Use Thickness Map",
                        "description": "Whether to use the thickness map",
                        "type": "Bool",
                        "defaultValue": true
                    },
                    {
                        "name": "thicknessMapUv",
                        "displayName": "    UV",
                        "description": "Thickness map UV set",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Unwrapped",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_transmissionThicknessMapUvIndex"
                        }
                    },
                    {
                        "name": "transmissionTint",
                        "displayName": "    Transmission Tint",
                        "description": "Color of the volume light traveling through",
                        "type": "Color",
                        "defaultValue": [ 1.0, 0.8, 0.6 ]
                    },
                    {
                        "name": "transmissionPower",
                        "displayName": "    Power",
                        "description": "How much transmitted light scatter radially ",
                        "type": "float",
                        "defaultValue": 6.0,
                        "min": 0.0,
                        "softMax": 20.0
                    },
                    {
                        "name": "transmissionDistortion",
                        "displayName": "    Distortion",
                        "description": "How much light direction distorted towards surface normal",
                        "type": "float",
                        "defaultValue": 0.1,
                        "min": 0.0,
                        "max": 1.0
                    },
                    {
                        "name": "transmissionAttenuation",
                        "displayName": "    Attenuation",
                        "description": "How fast transmitted light fade with thickness",
                        "type": "float",
                        "defaultValue": 4.0,
                        "min": 0.0,
                        "softMax": 20.0
                    },
                    {
                        "name": "shrinkFactor",
                        "displayName": "    Shrink Factor",
                        "description": "Shrink (absolute) offset towards the normal opposite direction to ensure correct shadow map projection",
                        "type": "float",
                        "defaultValue": 0.005,
                        "min": 0.0,
                        "softMax": 0.05
                    },
                    {
                        "name": "transmissionNdLBias",
                        "displayName": "    Angle Bias",
                        "description": "cosine of angle to extend below (N . L = 0) in scattering through thin objects",
                        "type": "float",
                        "defaultValue": 0.1,
                        "min": -1.0,
                        "softMax": 1.0
                    },
                    {
                        "name": "distanceAttenuation",
                        "displayName": "    Distance Attenuation",
                        "description": "Attenuation of the transmission effect, used to hide artifacts due to low-res shadow maps\nFor directional lights: attenuation proportional to the distance from the object to the camera.\nFor other light sources: attenuation proportional to the distance from the object to the light source.",
                        "type": "float",
                        "defaultValue": 0.5,
                        "min": 0.0,
                        "softMax": 4.0
                    },
                    {
                        "name": "transmissionScale",
                        "displayName": "    Scale",
                        "description": "Strength of transmission",
                        "type": "float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "softMax": 5.0
                    }
                ]
            },
            {
                "name": "wrinkleLayers",
                "displayName": "Wrinkle Layers",
                "description": "Properties for wrinkle maps to support morph animation, using vertex color blend weights.",
                "properties": [
                    {
                        "name": "enable",
                        "displayName": "Enable Wrinkle Layers",
                        "description": "Enable wrinkle layers for morph animations, using vertex color blend weights.",
                        "type": "Bool",
                        "defaultValue": false
                    },
                    {
                        "name": "count",
                        "displayName": "Number Of Layers",
                        "description": "The number of wrinkle map layers to use. The blend values come from the 'COLOR0' vertex stream, where R/G/B/A correspond to wrinkle layers 1/2/3/4 respectively.",
                        "type": "UInt",
                        "defaultValue": 4,
                        "min":  1,
                        "max":  4
                    },
                    {
                        "name": "showBlendValues",
                        "displayName": "Show Blend Values",
                        "description": "Enable a debug mode that draws the blend values as red, green, blue, and white overlays.",
                        "type": "Bool",
                        "defaultValue": false
                    },
                    {
                        "name": "enableBaseColor",
                        "displayName": "Enable Base Color Maps",
                        "description": "Enable support for blending the base color according to morph animations.",
                        "type": "Bool",
                        "defaultValue": false
                    },
                    {
                        "name": "baseColorMap1",
                        "displayName": "    Base Color 1",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_wrinkle_baseColor_texture1"
                        }
                    },
                    {
                        "name": "baseColorMap2",
                        "displayName": "    Base Color 2",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_wrinkle_baseColor_texture2"
                        }
                    },
                    {
                        "name": "baseColorMap3",
                        "displayName": "    Base Color 3",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_wrinkle_baseColor_texture3"
                        }
                    },
                    {
                        "name": "baseColorMap4",
                        "displayName": "    Base Color 4",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_wrinkle_baseColor_texture4"
                        }
                    },
                    {
                        "name": "enableNormal",
                        "displayName": "Enable Normal Maps",
                        "description": "Enable support for blending the normal maps according to morph animations.",
                        "type": "Bool",
                        "defaultValue": false
                    },
                    {
                        "name": "normalMap1",
                        "displayName": "    Normals 1",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_wrinkle_normal_texture1"
                        }
                    },
                    {
                        "name": "normalMap2",
                        "displayName": "    Normals 2",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_wrinkle_normal_texture2"
                        }
                    },
                    {
                        "name": "normalMap3",
                        "displayName": "    Normals 3",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_wrinkle_normal_texture3"
                        }
                    },
                    {
                        "name": "normalMap4",
                        "displayName": "    Normals 4",
                        "type": "Image",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_wrinkle_normal_texture4"
                        }
                    }
                ]
            },
            {
                "name": "general",
                "displayName": "General Settings",
                "description": "General settings.",
                "properties": [
                    {
                        "name": "applySpecularAA",
                        "displayName": "Apply Specular AA",
                        "description": "Whether to apply specular anti-aliasing in the shader.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_applySpecularAA"
                        }
                    },
                    {
                        "name": "enableShadows",
                        "displayName": "Enable Shadows",
                        "description": "Whether to use the shadow maps.",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableShadows"
                        }
                    },
                    {
                        "name": "enableDirectionalLights",
                        "displayName": "Enable Directional Lights",
                        "description": "Whether to use directional lights.",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableDirectionalLights"
                        }
                    },
                    {
                        "name": "enablePunctualLights",
                        "displayName": "Enable Punctual Lights",
                        "description": "Whether to use punctual lights.",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enablePunctualLights"
                        }
                    },
                    {
                        "name": "enableAreaLights",
                        "displayName": "Enable Area Lights",
                        "description": "Whether to use area lights.",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableAreaLights"
                        }
                    },
                    {
                        "name": "enableIBL",
                        "displayName": "Enable IBL",
                        "description": "Whether to use Image Based Lighting (IBL).",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableIBL"
                        }
                    }
                ]
            }
        ]
    },
    "shaders": [
        {
            "file": "./Skin.shader",
            "tag": "ForwardPass"
        },
        {
            "file": "Shaders/Shadow/ShadowmapSkin.shader",
            "tag": "Shadowmap"
        },
        {
            "file": "Shaders/Depth/DepthPassSkin.shader",
            "tag": "DepthPass"
        },
        {
            "file": "Shaders/MotionVector/MeshMotionVectorSkin.shader",
            "tag": "MeshMotionVector"
        }
    ],
    "functors": [
        {
            // Preprocess & build parameter set for subsurface scattering and translucency
            "type": "HandleSubsurfaceScatteringParameters",
            "args": {
                "mode": "subsurfaceScattering.transmissionMode",
                "scale": "subsurfaceScattering.transmissionScale",
                "power": "subsurfaceScattering.transmissionPower",
                "distortion": "subsurfaceScattering.transmissionDistortion",
                "attenuation": "subsurfaceScattering.transmissionAttenuation",
                "shrinkFactor": "subsurfaceScattering.shrinkFactor",
                "transmissionNdLBias": "subsurfaceScattering.transmissionNdLBias",
                "distanceAttenuation": "subsurfaceScattering.distanceAttenuation",
                "tintColor": "subsurfaceScattering.transmissionTint",
                "thickness": "subsurfaceScattering.thickness",
                "enabled": "subsurfaceScattering.enableSubsurfaceScattering",
                "scatterDistanceColor": "subsurfaceScattering.scatterColor",
                "scatterDistanceIntensity": "subsurfaceScattering.scatterDistance",
                "scatterDistanceShaderInput": "m_scatterDistance",
                "parametersShaderInput": "m_transmissionParams",
                "tintThickenssShaderInput": "m_transmissionTintThickness"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "baseColor.textureMap",
                "useTextureProperty": "baseColor.useTexture",
                "dependentProperties": ["baseColor.textureMapUv", "baseColor.textureBlendMode"],
                "shaderOption": "o_baseColor_useTexture"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "specularF0.textureMap",
                "useTextureProperty": "specularF0.useTexture",
                "dependentProperties": ["specularF0.textureMapUv"],
                "shaderOption": "o_specularF0_useTexture"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "normal.textureMap",
                "useTextureProperty": "normal.useTexture",
                "dependentProperties": ["normal.textureMapUv", "normal.factor", "normal.flipX", "normal.flipY"],
                "shaderOption": "o_normal_useTexture"    
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "occlusion.diffuseTextureMap",
                "useTextureProperty": "occlusion.diffuseUseTexture",
                "dependentProperties": ["occlusion.diffuseTextureMapUv", "occlusion.diffuseFactor"],
                "shaderOption": "o_diffuseOcclusion_useTexture"    
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "occlusion.specularTextureMap",
                "useTextureProperty": "occlusion.specularUseTexture",
                "dependentProperties": ["occlusion.specularTextureMapUv", "occlusion.specularFactor"],
                "shaderOption": "o_specularOcclusion_useTexture"    
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "Materials/Types/StandardPBR_Roughness.lua",
                "propertyNamePrefix": "roughness."
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "Materials/Types/EnhancedPBR_SubsurfaceState.lua",
                "propertyNamePrefix": "subsurfaceScattering."
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "Materials/Types/Skin_WrinkleMaps.lua"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "Materials/Types/Skin_SpecularF0.lua"
            }
        }
    ],
    "uvNameMap": {
        "UV0": "Tiled",
        "UV1": "Unwrapped"
    }
}
