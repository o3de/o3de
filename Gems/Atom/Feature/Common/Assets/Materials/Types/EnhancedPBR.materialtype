{
    "description": "Material Type with properties used to define Enhanced PBR, a metallic-roughness Physically-Based Rendering (PBR) material shading model, with advanced features like subsurface scattering, transmission, and anisotropy.",
    "version": 6,
    "versionUpdates": [
        {
            "toVersion": 4,
            "actions": [
                {"op": "rename", "from": "opacity.doubleSided", "to": "general.doubleSided"}
            ]
        },
        {
            "toVersion": 5,
            "actions": [
                {"op": "rename", "from": "detailUV.center", "to": "detailLayerGroup.detailUV.center"},
                {"op": "rename", "from": "detailUV.tileU", "to": "detailLayerGroup.detailUV.tileU"},
                {"op": "rename", "from": "detailUV.tileV", "to": "detailLayerGroup.detailUV.tileV"},
                {"op": "rename", "from": "detailUV.offsetU", "to": "detailLayerGroup.detailUV.offsetU"},
                {"op": "rename", "from": "detailUV.offsetV", "to": "detailLayerGroup.detailUV.offsetV"},
                {"op": "rename", "from": "detailUV.rotateDegrees", "to": "detailLayerGroup.detailUV.rotateDegrees"},
                {"op": "rename", "from": "detailUV.scale", "to": "detailLayerGroup.detailUV.scale"}
            ]
        },
        {
            "toVersion": 6,
            "actions": [
                {"op": "rename", "from": "irradiance.color", "to": "irradiance.manualColor"},
                {"op": "setValue", "name": "irradiance.irradianceColorSource", "value": "Manual"}
            ]
        }
    ],
    "propertyLayout": {
        "propertyGroups": [
            { 
                "$import": "MaterialInputs/BaseColorPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/MetallicPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/RoughnessPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/SpecularPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/NormalPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/DetailMapsPropertyGroup.json"
            },
            {
                "name": "anisotropy",
                "displayName": "Anisotropic Material Response",
                "description": "How much is this material response anisotropic.",
                "properties": [
                    {
                        "name": "enableAnisotropy",
                        "displayName": "Enable Anisotropy",
                        "description": "Enable anisotropic surface response for non uniform reflection along the axis",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableAnisotropy"
                        }
                    },
                    {
                        "name": "factor",
                        "displayName": "Anisotropy Factor",
                        "description": "Strength factor for the anisotropy: negative = along v, positive = along u",
                        "type": "Float",
                        "defaultValue": 0.0,
                        "min": -0.95,
                        "max": 0.95,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_anisotropicFactor"
                        }
                    },
                    {
                        "name": "anisotropyAngle",
                        "displayName": "Anisotropy Angle",
                        "description": "Anisotropy direction of major reflection axis: 0 = 0 degrees, 1.0 = 180 degrees",
                        "type": "Float",
                        "defaultValue": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_anisotropicAngle"
                        }
                    }
                ],
                "functors": [
                    {
                        "type": "Lua",
                        "args": {
                            "file": "EnhancedPBR_Anisotropy.lua"
                        }
                    }
                ]
            },
            { 
                "$import": "MaterialInputs/OcclusionPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/EmissivePropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/SubsurfaceAndTransmissionPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/ClearCoatPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/ParallaxPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/OpacityPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/UvPropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/IrradiancePropertyGroup.json"
            },
            { 
                "$import": "MaterialInputs/GeneralCommonPropertyGroup.json"
            }
        ]
    },
    "shaders": [
        {
            "file": "./EnhancedPBR_ForwardPass.shader",
            "tag": "ForwardPass"
        },
        {
            "file": "./EnhancedPBR_ForwardPass_EDS.shader",
            "tag": "ForwardPass_EDS"
        },
        {
            "file": "Shaders/Shadow/Shadowmap.shader",
            "tag": "Shadowmap"
        },
        {
            "file": "./EnhancedPBR_Shadowmap_WithPS.shader",
            "tag": "Shadowmap_WithPS"
        },
        {
            "file": "Shaders/Depth/DepthPass.shader",
            "tag": "DepthPass"
        },
        {
            "file": "./EnhancedPBR_DepthPass_WithPS.shader",
            "tag": "DepthPass_WithPS"
        },
        {
            "file": "Shaders/MotionVector/MeshMotionVector.shader",
            "tag": "MeshMotionVector"
        },
        // Used by the light culling system to produce accurate depth bounds for this object when it uses blended transparency
        {
            "file": "Shaders/Depth/DepthPassTransparentMin.shader",
            "tag": "DepthPassTransparentMin"
        },
        {
            "file": "Shaders/Depth/DepthPassTransparentMax.shader",
            "tag": "DepthPassTransparentMax"
        }        
    ],
    "functors": [
        {
            "type": "Lua",
            "args": {
                "file": "Materials/Types/StandardPBR_ShaderEnable.lua"
            }
        }
    ],
    "uvNameMap": {
        "UV0": "Tiled",
        "UV1": "Unwrapped"
    }
}
