{
    "description": "Similar to StandardPBR but supports multiple layers blended together.",
    "version": 4,
    "versionUpdates": [
        {
            "toVersion": 4,
            "actions": [
                {"op": "renamePrefix", "from": "layer1_", "to": "layer1."},
                {"op": "renamePrefix", "from": "layer2_", "to": "layer2."},
                {"op": "renamePrefix", "from": "layer3_", "to": "layer3."}
            ]
        }
    ],
    "propertyLayout": {
        "propertyGroups": [
            {
                "name": "blend",
                "displayName": "Blend Settings",
                "description": "Properties for configuring how layers are blended together.",
                "properties": [
                    {
                        "name": "enableLayer2",
                        "displayName": "Enable Layer 2",
                        "description": "Whether to enable layer 2.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_layer2_enabled"
                        }
                    }, 
                    {
                        "name": "enableLayer3",
                        "displayName": "Enable Layer 3",
                        "description": "Whether to enable layer 3.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_layer3_enabled"
                        }
                    }, 
                    {
                        "name": "blendSource",
                        "displayName": "Blend Source",
                        "description": "The source to use for defining the blend mask. Note VertexColors mode will still use the texture as a fallback if the mesh does not have a COLOR0 stream.",
                        "type": "Enum",
                        "enumValues":  ["BlendMaskTexture", "BlendMaskVertexColors", "Displacement", "Displacement_With_BlendMaskTexture", "Displacement_With_BlendMaskVertexColors"],
                        "defaultValue":  "BlendMaskTexture",
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_layerBlendSource"
                        }
                    },
                    {
                        "name": "textureMap",
                        "displayName": "Blend Mask Texture",
                        "description": "RGB image where each channel is the blend mask for one of the three available layers.",
                        "type": "Image",
                        "defaultValue": "Textures/DefaultBlendMask_layers.png",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_blendMaskTexture"
                        }
                    },
                    {
                        "name": "textureMapUv",
                        "displayName": "Blend Mask UV",
                        "description": "Blend Mask UV set.",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Tiled",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_blendMaskUvIndex"
                        }
                    },
                    {
                        "name": "displacementBlendDistance",
                        "displayName": "Blend Distance",
                        "description": "Adjusts how smoothly to transition between layers when displacement blending is enabled.",
                        "type": "Float",
                        "defaultValue": 0.0,
                        "min": 0.0,
                        "softMax": 0.1,
                        "step": 0.001,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_displacementBlendDistance"
                        }
                    },
                    {
                        "name": "debugDrawMode",
                        "displayName": "Debug Draw Mode",
                        "description": "Enables various debug view features.",
                        "type": "Enum",
                        "enumValues": [ "None", "BlendMask", "Displacement", "FinalBlendWeights" ],
                        "defaultValue": "None",
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_debugDrawMode"
                        }
                    }
                ]
            },
            {
                "name": "parallax",
                "displayName": "Parallax Settings",
                "description": "Properties for configuring the parallax effect, applied to all layers.",
                "properties": [
                    {
                        // Note parallax is enabled by default so that as soon as a user hooks up displacement settings they will see some parallax applied. 
                        // The functor that controls parallax will set o_parallax_feature_enabled=false when all the individual layers have no displacement, so
                        // a default value of true here will not have any initial impact on performance.
                        "name": "enable",
                        "displayName": "Enable",
                        "description": "Whether to enable the parallax feature for this material.",
                        "type": "Bool",
                        "defaultValue": true
                    }, 
                    {
                        "name": "parallaxUv",
                        "displayName": "UV",
                        "description": "UV set that supports parallax mapping.",
                        "type": "Enum",
                        "enumIsUv": true,
                        "defaultValue": "Tiled",
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_parallaxUvIndex"
                        }
                    },
                    {
                        "name": "algorithm",
                        "displayName": "Algorithm",
                        "description": "Select the algorithm to use for parallax mapping.",
                        "type": "Enum",
                        "enumValues": [ "Basic", "Steep", "POM", "Relief", "ContactRefinement" ],
                        "defaultValue": "POM",
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_parallax_algorithm"
                        }
                    },
                    {
                        "name": "quality",
                        "displayName": "Quality",
                        "description": "Quality of parallax mapping.",
                        "type": "Enum",
                        "enumValues": [ "Low", "Medium", "High", "Ultra" ],
                        "defaultValue": "Low",
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_parallax_quality"
                        }
                    },
                    {
                        "name": "pdo",
                        "displayName": "Pixel Depth Offset",
                        "description": "Enable PDO to offset the original pixel depths. This will affect any shaders using depth, for example, when receiving shadows.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_parallax_enablePixelDepthOffset"
                        }
                    },
                    {
                        "name": "shadowFactor",
                        "displayName": "Shadow Factor",
                        "description": "Strength factor for self-shadowing on surfaces with pixel depth offset (PDO). Use lower values to reduce the appearance of shadow acne or other artifacts.",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "connection": {
                            "type": "ShaderInput",
                            "name": "m_parallax_pdo_shadowFactor"
                        }
                    },
                    {
                        "name": "showClipping",
                        "displayName": "Show Clipping",
                        "description": "Highlight areas where the height map is clipped by the mesh surface.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_parallax_highlightClipping"
                        }
                    }
                ]
            },
            { 
                "$import": "MaterialInputs/UvPropertyGroup.json"
            },
            {
                // TODO: this should probably be updated to import IrradiancePropertyGroup.json
                // Note: this property group is used in the DiffuseGlobalIllumination pass, it is not read by the StandardPBR shader
                "name": "irradiance",
                "displayName": "Irradiance",
                "description": "Properties for configuring the irradiance used in global illumination.",
                "properties": [
                    // Note: this property group is used in the DiffuseGlobalIllumination pass, it is not read by the StandardPBR shader
                    {
                        "name": "color",
                        "displayName": "Color",
                        "description": "Color is displayed as sRGB but the values are stored as linear color.",
                        "type": "Color",
                        "defaultValue": [ 1.0, 1.0, 1.0 ]
                    },
                    {
                        "name": "factor",
                        "displayName": "Factor",
                        "description": "Strength factor for scaling the irradiance color values. Zero (0.0) is black, white (1.0) is full color.",
                        "type": "Float",
                        "defaultValue": 1.0,
                        "min": 0.0,
                        "max": 1.0
                    }
                ]
            },
            {
                // TODO(MaterialPipeline): If we move enableMultiScatterCompensation to the General property group for all the other material types, we can replace this whole section with $import GeneralCommonPropertyGroup.json.
                "name": "general",
                "displayName": "General Settings",
                "description": "General settings.",
                "properties": [
                    {
                        "name": "applySpecularAA",
                        "displayName": "Apply Specular AA",
                        "description": "Whether to apply specular anti-aliasing in the shader.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_applySpecularAA"
                        }
                    },
                    {
                        "name": "enableMultiScatterCompensation",
                        "displayName": "Multiscattering Compensation",
                        "description": "Whether to enable multiple scattering compensation.",
                        "type": "Bool",
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_specularF0_enableMultiScatterCompensation"
                        }
                    },
                    {
                        "name": "enableShadows",
                        "displayName": "Receive Shadows",
                        "description": "Whether to use the shadow maps during lighting.",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableShadows"
                        }
                    },
                    {
                        "name": "castShadows",
                        "displayName": "Cast Shadows",
                        "description": "Whether to cast shadows onto other objects.",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "InternalProperty",
                            "name": "castShadows"
                        }
                    },
                    {
                        "name": "enableDirectionalLights",
                        "displayName": "Enable Directional Lights",
                        "description": "Whether to use directional lights.",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableDirectionalLights"
                        }
                    },
                    {
                        "name": "enablePunctualLights",
                        "displayName": "Enable Punctual Lights",
                        "description": "Whether to use punctual lights.",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enablePunctualLights"
                        }
                    },
                    {
                        "name": "enableAreaLights",
                        "displayName": "Enable Area Lights",
                        "description": "Whether to use area lights.",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableAreaLights"
                        }
                    },
                    {
                        "name": "enableIBL",
                        "displayName": "Enable IBL",
                        "description": "Whether to use Image Based Lighting (IBL).",
                        "type": "Bool",
                        "defaultValue": true,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_enableIBL"
                        }
                    },
                    {
                        "name": "forwardPassIBLSpecular",
                        "displayName": "Forward Pass IBL Specular",
                        "description": "Whether to apply IBL specular in the forward pass.",
                        "type": "Bool",
                        "defaultValue": false,
                        "connection": {
                            "type": "ShaderOption",
                            "name": "o_materialUseForwardPassIBLSpecular"
                        }
                    }
                ]
            },
            { 
                "$import": { 
                    "filename": "StandardMultilayerPBR_LayerProperties.json", 
                    "patch": {
                        "name": "layer1",
                        "displayName": "Layer 1",
                        "shaderInputsPrefix":  "m_layer1_",
                        "shaderOptionsPrefix":  "o_layer1_"
                    }
                }
            },
            { 
                "$import": { 
                    "filename": "StandardMultilayerPBR_LayerProperties.json", 
                    "patch": {
                        "name": "layer2",
                        "displayName": "Layer 2",
                        "shaderInputsPrefix":  "m_layer2_",
                        "shaderOptionsPrefix":  "o_layer2_"
                    }
                }
            },
            { 
                "$import": { 
                    "filename": "StandardMultilayerPBR_LayerProperties.json", 
                    "patch": {
                        "name": "layer3",
                        "displayName": "Layer 3",
                        "shaderInputsPrefix":  "m_layer3_",
                        "shaderOptionsPrefix":  "o_layer3_"
                    }
                }
            }
        ]
    },
    "lightingModel": "Standard",
    "materialShaderCode": "StandardMultilayerPBR.azsli",
    "functors": [
        {
            "type": "Lua",
            "args": {
                "file": "Materials/Types/StandardMultilayerPBR_LayerEnable.lua"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "Materials/Types/StandardMultilayerPBR_ClearCoatEnableFeature.lua"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "Materials/Types/StandardMultilayerPBR_Displacement.lua"
            }
        }
    ],
    "uvNameMap": {
        "UV0": "Tiled",
        "UV1": "Unwrapped"
    }
}
