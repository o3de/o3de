{
    "description": "Similar to StandardPBR but supports multiple layers blended together.",
    "propertyLayout": {
        "version": 3,
        "groups": [
            {
                "id": "general",
                "displayName": "General",
                "description": "General settings."
            },
            {
                "id": "blend",
                "displayName": "Blend Settings",
                "description": "Properties for configuring how layers are blended together."
            },
            {
                "id": "parallax",
                "displayName": "Parallax Settings",
                "description": "Properties for configuring the parallax effect, applied to all layers."
            },
            {
                "id": "opacity",
                "displayName": "Opacity",
                "description": "Properties for configuring the materials transparency."
            },
            {
                "id": "uv",
                "displayName": "UVs",
                "description": "Properties for configuring UV transforms for the entire material, including the blend masks."
            },
            {
                "id": "subsurfaceScattering",
                "displayName": "Subsurface Scattering",
                "description": "Properties for configuring subsurface scattering effects."
            },
            {
                // Note: this property group is used in the DiffuseGlobalIllumination pass, it is not read by the StandardPBR shader
                "id": "irradiance",
                "displayName": "Irradiance",
                "description": "Properties for configuring the irradiance used in global illumination."
            },
            //##############################################################################################
            // Layer 1 Groups 
            //##############################################################################################
            {
                "id": "layer1_baseColor",
                "displayName": "Layer 1: Base Color",
                "description": "Properties for configuring the surface reflected color for dielectrics or reflectance values for metals."
            },
            {
                "id": "layer1_metallic",
                "displayName": "Layer 1: Metallic",
                "description": "Properties for configuring whether the surface is metallic or not."
            },
            {
                "id": "layer1_roughness",
                "displayName": "Layer 1: Roughness",
                "description": "Properties for configuring how rough the surface appears."
            },
            {
                "id": "layer1_specularF0",
                "displayName": "Layer 1: Specular Reflectance f0",
                "description": "The constant f0 represents the specular reflectance at normal incidence (Fresnel 0 Angle). Used to adjust reflectance of non-metal surfaces."
            },
            {
                "id": "layer1_normal",
                "displayName": "Layer 1: Normal",
                "description": "Properties related to configuring surface normal."
            },
            {
                "id": "layer1_clearCoat",
                "displayName": "Layer 1: Clear Coat",
                "description": "Properties for configuring gloss clear coat"
            }, 
            {
                "id": "layer1_occlusion",
                "displayName": "Layer 1: Occlusion",
                "description": "Properties for baked textures for diffuse and specular occlusion of ambient lighting."
            },
            {
                "id": "layer1_emissive",
                "displayName": "Layer 1: Emissive",
                "description": "Properties to add light emission, independent of other lights in the scene."
            },
            {
                "id": "layer1_parallax",
                "displayName": "Layer 1: Parallax Mapping",
                "description": "Properties for parallax effect produced by depthmap."
            },
            {
                "id": "layer1_uv",
                "displayName": "Layer 1: UVs",
                "description": "Properties for configuring UV transforms."
            },
            //##############################################################################################
            // Layer 2 Groups 
            //##############################################################################################
            {
                "id": "layer2_baseColor",
                "displayName": "Layer 2: Base Color",
                "description": "Properties for configuring the surface reflected color for dielectrics or reflectance values for metals."
            },
            {
                "id": "layer2_metallic",
                "displayName": "Layer 2: Metallic",
                "description": "Properties for configuring whether the surface is metallic or not."
            },
            {
                "id": "layer2_roughness",
                "displayName": "Layer 2: Roughness",
                "description": "Properties for configuring how rough the surface appears."
            },
            {
                "id": "layer2_specularF0",
                "displayName": "Layer 2: Specular Reflectance f0",
                "description": "The constant f0 represents the specular reflectance at normal incidence (Fresnel 0 Angle). Used to adjust reflectance of non-metal surfaces."
            },
            {
                "id": "layer2_normal",
                "displayName": "Layer 2: Normal",
                "description": "Properties related to configuring surface normal."
            },
            {
                "id": "layer2_clearCoat",
                "displayName": "Layer 2: Clear Coat",
                "description": "Properties for configuring gloss clear coat"
            }, 
            {
                "id": "layer2_occlusion",
                "displayName": "Layer 2: Occlusion",
                "description": "Properties for baked textures for diffuse and specular occlusion of ambient lighting."
            },
            {
                "id": "layer2_emissive",
                "displayName": "Layer 2: Emissive",
                "description": "Properties to add light emission, independent of other lights in the scene."
            },
            {
                "id": "layer2_parallax",
                "displayName": "Layer 2: Parallax Mapping",
                "description": "Properties for parallax effect produced by depthmap."
            },
            {
                "id": "layer2_uv",
                "displayName": "Layer 2: UVs",
                "description": "Properties for configuring UV transforms."
            },
            //##############################################################################################
            // Layer 3 Groups 
            //##############################################################################################
            {
                "id": "layer3_baseColor",
                "displayName": "Layer 3: Base Color",
                "description": "Properties for configuring the surface reflected color for dielectrics or reflectance values for metals."
            },
            {
                "id": "layer3_metallic",
                "displayName": "Layer 3: Metallic",
                "description": "Properties for configuring whether the surface is metallic or not."
            },
            {
                "id": "layer3_roughness",
                "displayName": "Layer 3: Roughness",
                "description": "Properties for configuring how rough the surface appears."
            },
            {
                "id": "layer3_specularF0",
                "displayName": "Layer 3: Specular Reflectance f0",
                "description": "The constant f0 represents the specular reflectance at normal incidence (Fresnel 0 Angle). Used to adjust reflectance of non-metal surfaces."
            },
            {
                "id": "layer3_normal",
                "displayName": "Layer 3: Normal",
                "description": "Properties related to configuring surface normal."
            },
            {
                "id": "layer3_clearCoat",
                "displayName": "Layer 3: Clear Coat",
                "description": "Properties for configuring gloss clear coat"
            }, 
            {
                "id": "layer3_occlusion",
                "displayName": "Layer 3: Occlusion",
                "description": "Properties for baked textures for diffuse and specular occlusion of ambient lighting."
            },
            {
                "id": "layer3_emissive",
                "displayName": "Layer 3: Emissive",
                "description": "Properties to add light emission, independent of other lights in the scene."
            },
            {
                "id": "layer3_parallax",
                "displayName": "Layer 3: Parallax Mapping",
                "description": "Properties for parallax effect produced by depthmap."
            },
            {
                "id": "layer3_uv",
                "displayName": "Layer 3: UVs",
                "description": "Properties for configuring UV transforms."
            }
        ],
        "properties": {
            //##############################################################################################
            // General Properties 
            //##############################################################################################
            "general": [
                {
                    "id": "debugDrawMode",
                    "displayName": "Debug Draw Mode",
                    "description": "Enables various debug view features.",
                    "type": "Enum",
                    "enumValues": [ "None", "BlendMaskValues", "DepthMaps" ],
                    "defaultValue": "None",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_debugDrawMode"
                    }
                },
                {
                    "id": "applySpecularAA",
                    "displayName": "Apply Specular AA",
                    "description": "Whether to apply specular anti-aliasing in the shader.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_applySpecularAA"
                    }
                },
                {
                    "id": "enableMultiScatterCompensation",
                    "displayName": "Multiscattering Compensation",
                    "description": "Whether to enable multiple scattering compensation.",
                    "type": "Bool",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_specularF0_enableMultiScatterCompensation"
                    }
                },
                {
                    "id": "enableShadows",
                    "displayName": "Enable Shadows",
                    "description": "Whether to use the shadow maps.",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_enableShadows"
                    }
                },
                {
                    "id": "enableDirectionalLights",
                    "displayName": "Enable Directional Lights",
                    "description": "Whether to use directional lights.",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_enableDirectionalLights"
                    }
                },
                {
                    "id": "enablePunctualLights",
                    "displayName": "Enable Punctual Lights",
                    "description": "Whether to use punctual lights.",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_enablePunctualLights"
                    }
                },
                {
                    "id": "enableAreaLights",
                    "displayName": "Enable Area Lights",
                    "description": "Whether to use area lights.",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_enableAreaLights"
                    }
                },
                {
                    "id": "enableIBL",
                    "displayName": "Enable IBL",
                    "description": "Whether to use Image Based Lighting (IBL).",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_enableIBL"
                    }
                },
                {
                    "id": "forwardPassIBLSpecular",
                    "displayName": "Forward Pass IBL Specular",
                    "description": "Whether to apply IBL specular in the forward pass.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_materialUseForwardPassIBLSpecular"
                    }
                }
            ],
            "blend": [
                {
                    "id": "blendSource",
                    "displayName": "Blend Source",
                    "description": "The source to use for defining the blend mask. Note VertexColors mode will still use the texture as a fallback if the mesh does not have a COLOR0 stream.",
                    "type": "Enum",
                    "enumValues":  ["TextureMap", "VertexColors"],
                    "defaultValue":  "TextureMap",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_blendSource"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Blend Mask",
                    "description": "RGB image where each channel is the blend mask for one of the three available layers.",
                    "type": "Image",
                    "defaultValue": "Textures/DefaultBlendMask_layers.png",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_blendMaskTexture"
                    }
                },
                {
                    "id": "textureMapUv",
                    "displayName": "Blend Mask UV",
                    "description": "Blend Mask UV set.",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_blendMaskUvIndex"
                    }
                }
            ],
            "parallax": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Whether to enable the parallax feature for this material.",
                    "type": "Bool",
                    "defaultValue": false
                }, 
                {
                    "id": "parallaxUv",
                    "displayName": "UV",
                    "description": "UV set that supports parallax mapping.",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_parallaxUvIndex"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the depth values for all layers.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_parallaxMainDepthFactor"
                    }
                },
                {
                    "id": "algorithm",
                    "displayName": "Algorithm",
                    "description": "Select the algorithm to use for parallax mapping.",
                    "type": "Enum",
                    "enumValues": [ "Basic", "Steep", "POM", "Relief", "ContactRefinement" ],
                    "defaultValue": "POM",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_parallax_algorithm"
                    }
                },
                {
                    "id": "quality",
                    "displayName": "Quality",
                    "description": "Quality of parallax mapping.",
                    "type": "Enum",
                    "enumValues": [ "Low", "Medium", "High", "Ultra" ],
                    "defaultValue": "Medium",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_parallax_quality"
                    }
                },
                {
                    "id": "pdo",
                    "displayName": "Pixel Depth Offset",
                    "description": "Whether to enable the pixel depth offset feature.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_parallax_enablePixelDepthOffset"
                    }
                }
            ],
            "opacity": [
                {
                    "id": "mode",
                    "displayName": "Opacity Mode",
                    "description": "Opacity mode for this texture.",
                    "type": "Enum",
                    "enumValues": [ "Opaque", "Cutout", "Blended" ],
                    "defaultValue": "Opaque",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_opacity_mode"
                    }
                },
                {
                    "id": "alphaSource",
                    "displayName": "Alpha Source",
                    "description": "Source texture of alpha value.",
                    "type": "Enum",
                    "enumValues": [ "Packed", "Split", "None" ],
                    "defaultValue": "Packed",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_opacity_source"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface opacity.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_opacityMap"
                    }
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Opacity texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_opacityMapUvIndex"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Factor for cutout threshold and blending",
                    "type": "Float",
                    "min": 0.0,
                    "max": 1.0,
                    "defaultValue": 0.5,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_opacityFactor"
                    }
                },
                {
                    "id": "doubleSided",
                    "displayName": "Double-sided",
                    "description": "Whether to render back-faces or just front-faces.",
                    "type": "Bool"
                }
            ],
            "uv": [
                {
                    "id": "center",
                    "displayName": "Center",
                    "description": "Center point for scaling and rotation transformations.",
                    "type": "vector2",
                    "vectorLabels": [ "U", "V" ],
                    "defaultValue": [ 0.0, 0.0 ]
                },
                {
                    "id": "tileU",
                    "displayName": "Tile U",
                    "description": "Scales texture coordinates in V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "id": "tileV",
                    "displayName": "Tile V",
                    "description": "Scales texture coordinates in V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "id": "offsetU",
                    "displayName": "Offset U",
                    "description": "Offsets texture coordinates in the U direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.001
                },
                {
                    "id": "offsetV", 
                    "displayName": "Offset V",
                    "description": "Offsets texture coordinates in the V direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.001
                },
                {
                    "id": "rotateDegrees",
                    "displayName": "Rotate",
                    "description": "Rotates the texture coordinates (degrees).",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -180.0,
                    "max": 180.0,
                    "step": 1.0
                },
                {
                    "id": "scale",
                    "displayName": "Scale",
                    "description": "Scales texture coordinates in both U and V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                }
            ],
            "subsurfaceScattering": [
                {
                    "id": "enableSubsurfaceScattering",
                    "displayName": "Subsurface Scattering",
                    "description": "Enable subsurface scattering feature, this will disable metallic and parallax mapping property due to incompatibility",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_enableSubsurfaceScattering"
                    }
                },
                {
                    "id": "subsurfaceScatterFactor",
                    "displayName": "    Factor",
                    "description": "Strength factor for scaling percentage of subsurface scattering effect applied",
                    "type": "float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_subsurfaceScatteringFactor"
                    }
                },
                {
                    "id": "influenceMap",
                    "displayName": "    Influence Map",
                    "description": "Use texture map to control the strength of subsurface scattering",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_subsurfaceScatteringInfluenceMap"
                    }
                },
                {
                    "id": "useInfluenceMap",
                    "displayName": "    Use Influence Map",
                    "description": "Whether to use the texture map as influence mask.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "influenceMapUv",
                    "displayName": "    UV",
                    "description": "Influence map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_subsurfaceScatteringInfluenceMapUvIndex"
                    }
                },
                {
                    "id": "scatterColor",
                    "displayName": "    Scatter color",
                    "description": "Color of volume light traveled through",
                    "type": "Color",
                    "defaultValue": [ 1.0, 0.27, 0.13 ]
                },
                {
                    "id": "scatterDistance",
                    "displayName": "    Scatter distance",
                    "description": "How far light traveled inside the volume",
                    "type": "float",
                    "defaultValue": 8,
                    "min": 0.0,
                    "softMax": 20.0
                },
                {
                    "id": "quality",
                    "displayName": "    Quality",
                    "description": "How much percent of sample will be used for each pixel, more samples improve quality and reduce artifacts, especially when the scatter distance is relatively large, but slow down computation time, 1.0 = full set 200 samples per pixel",
                    "type": "float",
                    "defaultValue": 0.4,
                    "min": 0.2,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_subsurfaceScatteringQuality"
                    }
                },
                {
                    "id": "transmissionMode",
                    "displayName": "Transmission",
                    "description": "Algorithm used for calculating transmission",
                    "type": "Enum",
                    "enumValues": [ "None", "ThickObject", "ThinObject" ],
                    "defaultValue": "None",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_transmission_mode"
                    }
                },
                {
                    "id": "thickness",
                    "displayName": "    Thickness",
                    "description": "Normalized global thickness, the maxima between this value (multiplied by thickness map if enabled) and thickness from shadow map (if applicable) will be used as final thickness of pixel",
                    "type": "float",
                    "defaultValue": 0.5,
                    "min": 0.0,
                    "max": 1.0
                },
                {
                    "id": "thicknessMap",
                    "displayName": "    Thickness Map",
                    "description": "Use a greyscale texture for per pixel thickness",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_transmissionThicknessMap"
                    }
                },
                {
                    "id": "useThicknessMap",
                    "displayName": "    Use Thickness Map",
                    "description": "Whether to use the thickness map",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "thicknessMapUv",
                    "displayName": "    UV",
                    "description": "Thickness map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_transmissionThicknessMapUvIndex"
                    }
                },
                {
                    "id": "transmissionTint",
                    "displayName": "    Transmission Tint",
                    "description": "Color of the volume light travelling through",
                    "type": "Color",
                    "defaultValue": [ 1.0, 0.8, 0.6 ]
                },
                {
                    "id": "transmissionPower",
                    "displayName": "    Power",
                    "description": "How much transmitted light scatter radially ",
                    "type": "float",
                    "defaultValue": 6.0,
                    "min": 0.0,
                    "softMax":  20.0
                },
                {
                    "id": "transmissionDistortion",
                    "displayName": "    Distortion",
                    "description": "How much light direction distorted towards surface normal",
                    "type": "float",
                    "defaultValue": 0.1,
                    "min": 0.0,
                    "max": 1.0
                },
                {
                    "id": "transmissionAttenuation",
                    "displayName": "    Attenuation",
                    "description": "How fast transmitted light fade with thickness",
                    "type": "float",
                    "defaultValue": 4.0,
                    "min": 0.0,
                    "softMax": 20.0
                },
                {
                    "id": "transmissionScale",
                    "displayName": "    Scale",
                    "description": "Strength of transmission",
                    "type": "float",
                    "defaultValue": 3.0,
                    "min": 0.0,
                    "softMax": 20.0
                }
            ],
            "irradiance": [
                // Note: this property group is used in the DiffuseGlobalIllumination pass, it is not read by the StandardPBR shader
                {
                    "id": "color",
                    "displayName": "Color",
                    "description": "Color is displayed as sRGB but the values are stored as linear color.",
                    "type": "Color",
                    "defaultValue": [ 1.0, 1.0, 1.0 ]
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the irradiance color values. Zero (0.0) is black, white (1.0) is full color.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0
                }
            ],
            //##############################################################################################
            // Layer 1 Properties 
            //##############################################################################################
            "layer1_baseColor": [
                {
                    "id": "color",
                    "displayName": "Color",
                    "description": "Color is displayed as sRGB but the values are stored as linear color.",
                    "type": "Color",
                    "defaultValue": [ 1.0, 1.0, 1.0 ],
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_baseColor"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the base color values. Zero (0.0) is black, white (1.0) is full color.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_baseColorFactor"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Base color texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_baseColorMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Base color texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_baseColorMapUvIndex"
                    }
                },
                {
                    "id": "textureBlendMode",
                    "displayName": "Texture Blend Mode",
                    "description": "Selects the equation to use when combining Color, Factor, and Texture Map.",
                    "type": "Enum",
                    "enumValues": [ "Multiply", "LinearLight", "Lerp", "Overlay" ],
                    "defaultValue": "Multiply",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_layer1_o_baseColorTextureBlendMode"
                    }
                }
            ],
            "layer1_metallic": [
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "This value is linear, black is non-metal and white means raw metal.",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_metallicFactor"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_metallicMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Metallic texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_metallicMapUvIndex"
                    }
                }
            ],
            "layer1_roughness": [
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface roughness.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_roughnessMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Roughness texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_roughnessMapUvIndex"
                    }
                },
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "id": "lowerBound",
                    "displayName": "Lower Bound",
                    "description": "The roughness value that corresponds to black in the texture map.",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_roughnessLowerBound"
                    }
                },
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "id": "upperBound",
                    "displayName": "Upper Bound",
                    "description": "The roughness value that corresponds to white in the texture map.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_roughnessUpperBound"
                    }
                },
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Controls the roughness value",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_roughnessFactor"
                    }
                }
            ],
            "layer1_specularF0": [
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "The default IOR is 1.5, which gives you 0.04 (4% of light reflected at 0 degree angle for dielectric materials). F0 values lie in the range 0-0.08, so that is why the default F0 slider is set on 0.5.",
                    "type": "Float",
                    "defaultValue": 0.5,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_specularF0Factor"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface reflectance.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_specularF0Map"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Specular reflection texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_specularF0MapUvIndex"
                    }
                }
            ],
            "layer1_normal": [
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface normal direction.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_normalMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just rely on vertex normals.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Normal texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_normalMapUvIndex"
                    }
                },
                {
                    "id": "flipX",
                    "displayName": "Flip X Channel",
                    "description": "Flip tangent direction for this normal map.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_flipNormalX"
                    }
                },
                {
                    "id": "flipY",
                    "displayName": "Flip Y Channel",
                    "description": "Flip bitangent direction for this normal map.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_flipNormalY"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the values",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_normalFactor"
                    }
                }
            ],
            "layer1_clearCoat": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Enable clear coat",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the percentage of effect applied",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_clearCoatFactor"
                    }
                },
                {
                    "id": "influenceMap",
                    "displayName": "    Influence Map",
                    "description": "Strength factor texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_clearCoatInfluenceMap"
                    }
                },
                {
                    "id": "useInfluenceMap",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "influenceMapUv",
                    "displayName": "    UV",
                    "description": "Strength factor texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_clearCoatInfluenceMapUvIndex"
                    }
                },
                {
                    "id": "roughness",
                    "displayName": "Roughness",
                    "description": "Clear coat layer roughness",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_clearCoatRoughness"
                    }
                },
                {
                    "id": "roughnessMap",
                    "displayName": "    Roughness Map",
                    "description": "Roughness texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_clearCoatRoughnessMap"
                    }
                },
                {
                    "id": "useRoughnessMap",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the texture map, or just default to the roughness value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "roughnessMapUv",
                    "displayName": "    UV",
                    "description": "Roughness texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_clearCoatRoughnessMapUvIndex"
                    }
                },
                {
                    "id": "normalStrength",
                    "displayName": "Normal Strength",
                    "description": "Scales the impact of the clear coat normal map",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_clearCoatNormalStrength"
                    }
                },
                {
                    "id": "normalMap",
                    "displayName": "Normal Map",
                    "description": "Normal map for clear coat layer, as top layer material clear coat doesn't affect by base layer normal map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_clearCoatNormalMap"
                    }
                },
                {
                    "id": "useNormalMap",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the normal map",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "normalMapUv",
                    "displayName": "    UV",
                    "description": "Normal texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_clearCoatNormalMapUvIndex"
                    }
                }
            ],
            "layer1_occlusion": [
                {
                    "id": "diffuseTextureMap",
                    "displayName": "Diffuse AO",
                    "description": "Texture map for defining occlusion area for diffuse ambient lighting.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_diffuseOcclusionMap"
                    }
                },
                {
                    "id": "diffuseUseTexture",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the Diffuse AO texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "diffuseTextureMapUv",
                    "displayName": "    UV",
                    "description": "Diffuse AO texture map UV set.",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_diffuseOcclusionMapUvIndex"
                    }
                },
                {
                    "id": "diffuseFactor",
                    "displayName": "    Factor",
                    "description": "Strength factor for scaling the values of Diffuse AO",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_diffuseOcclusionFactor"
                    }
                },
                {
                    "id": "specularTextureMap",
                    "displayName": "Specular Cavity",
                    "description": "Texture map for defining occlusion area for specular lighting.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_specularOcclusionMap"
                    }
                },
                {
                    "id": "specularUseTexture",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the Specular Cavity texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "specularTextureMapUv",
                    "displayName": "    UV",
                    "description": "Specular Cavity texture map UV set.",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_specularOcclusionMapUvIndex"
                    }
                },
                {
                    "id": "specularFactor",
                    "displayName": "    Factor",
                    "description": "Strength factor for scaling the values of Specular Cavity",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_specularOcclusionFactor"
                    }
                }
            ],
            "layer1_emissive": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Enable the emissive group",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "id": "unit",
                    "displayName": "Units",
                    "description": "The photometric units of the Intensity property.",
                    "type": "Enum",
                    "enumValues": ["Ev100"],
                    "defaultValue": "Ev100"
                },
                {
                    "id": "color",
                    "displayName": "Color",
                    "description": "Color is displayed as sRGB but the values are stored as linear color.",
                    "type": "Color",
                    "defaultValue": [ 1.0, 1.0, 1.0 ],
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_emissiveColor"
                    }
                },
                {
                    "id": "intensity",
                    "displayName": "Intensity",
                    "description": "The amount of energy emitted.",
                    "type": "Float",
                    "defaultValue": 4,
                    "min": -10,
                    "max": 20,
                    "softMin": -6,
                    "softMax": 16
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining emissive area.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_emissiveMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Emissive texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_emissiveMapUvIndex"
                    }
                }
            ],
            "layer1_parallax": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Whether to enable the parallax feature.",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Depthmap to create parallax effect.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_depthMap"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the depth values",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "softMax": 0.1,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_depthFactor"
                    }
                },
                {
                    "id": "invert",
                    "displayName": "Invert",
                    "description": "Invert to depthmap if the texture is heightmap",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer1_m_depthInverted"
                    }
                }
            ],
            "layer1_uv": [
                {
                    "id": "center",
                    "displayName": "Center",
                    "description": "Center point for scaling and rotation transformations.",
                    "type": "vector2",
                    "vectorLabels": [ "U", "V" ],
                    "defaultValue": [ 0.0, 0.0 ]
                },
                {
                    "id": "tileU",
                    "displayName": "Tile U",
                    "description": "Scales texture coordinates in V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "id": "tileV",
                    "displayName": "Tile V",
                    "description": "Scales texture coordinates in V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "id": "offsetU",
                    "displayName": "Offset U",
                    "description": "Offsets texture coordinates in the U direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.001
                },
                {
                    "id": "offsetV",
                    "displayName": "Offset V",
                    "description": "Offsets texture coordinates in the V direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.001
                },
                {
                    "id": "rotateDegrees",
                    "displayName": "Rotate",
                    "description": "Rotates the texture coordinates (degrees).",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -180.0,
                    "max": 180.0,
                    "step": 1.0
                },
                {
                    "id": "scale",
                    "displayName": "Scale",
                    "description": "Scales texture coordinates in both U and V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                }
            ],
            //##############################################################################################
            // Layer 2 Properties 
            //##############################################################################################
            "layer2_baseColor": [
                {
                    "id": "color",
                    "displayName": "Color",
                    "description": "Color is displayed as sRGB but the values are stored as linear color.",
                    "type": "Color",
                    "defaultValue": [ 1.0, 1.0, 1.0 ],
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_baseColor"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the base color values. Zero (0.0) is black, white (1.0) is full color.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_baseColorFactor"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Base color texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_baseColorMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Base color texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_baseColorMapUvIndex"
                    }
                },
                {
                    "id": "textureBlendMode",
                    "displayName": "Texture Blend Mode",
                    "description": "Selects the equation to use when combining Color, Factor, and Texture Map.",
                    "type": "Enum",
                    "enumValues": [ "Multiply", "LinearLight", "Lerp", "Overlay" ],
                    "defaultValue": "Multiply",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_layer2_o_baseColorTextureBlendMode"
                    }
                }
            ],
            "layer2_metallic": [
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "This value is linear, black is non-metal and white means raw metal.",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_metallicFactor"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_metallicMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Metallic texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_metallicMapUvIndex"
                    }
                }
            ],
            "layer2_roughness": [
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface roughness.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_roughnessMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Roughness texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_roughnessMapUvIndex"
                    }
                },
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "id": "lowerBound",
                    "displayName": "Lower Bound",
                    "description": "The roughness value that corresponds to black in the texture map.",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_roughnessLowerBound"
                    }
                },
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "id": "upperBound",
                    "displayName": "Upper Bound",
                    "description": "The roughness value that corresponds to white in the texture map.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_roughnessUpperBound"
                    }
                },
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Controls the roughness value",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_roughnessFactor"
                    }
                }
            ],
            "layer2_specularF0": [
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "The default IOR is 1.5, which gives you 0.04 (4% of light reflected at 0 degree angle for dielectric materials). F0 values lie in the range 0-0.08, so that is why the default F0 slider is set on 0.5.",
                    "type": "Float",
                    "defaultValue": 0.5,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_specularF0Factor"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface reflectance.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_specularF0Map"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Specular reflection texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_specularF0MapUvIndex"
                    }
                }
            ],
            "layer2_normal": [
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface normal direction.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_normalMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just rely on vertex normals.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Normal texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_normalMapUvIndex"
                    }
                },
                {
                    "id": "flipX",
                    "displayName": "Flip X Channel",
                    "description": "Flip tangent direction for this normal map.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_flipNormalX"
                    }
                },
                {
                    "id": "flipY",
                    "displayName": "Flip Y Channel",
                    "description": "Flip bitangent direction for this normal map.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_flipNormalY"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the values",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_normalFactor"
                    }
                }
            ],
            "layer2_clearCoat": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Enable clear coat",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the percentage of effect applied",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_clearCoatFactor"
                    }
                },
                {
                    "id": "influenceMap",
                    "displayName": "    Influence Map",
                    "description": "Strength factor texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_clearCoatInfluenceMap"
                    }
                },
                {
                    "id": "useInfluenceMap",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "influenceMapUv",
                    "displayName": "    UV",
                    "description": "Strength factor texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_clearCoatInfluenceMapUvIndex"
                    }
                },
                {
                    "id": "roughness",
                    "displayName": "Roughness",
                    "description": "Clear coat layer roughness",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_clearCoatRoughness"
                    }
                },
                {
                    "id": "roughnessMap",
                    "displayName": "    Roughness Map",
                    "description": "Roughness texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_clearCoatRoughnessMap"
                    }
                },
                {
                    "id": "useRoughnessMap",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the texture map, or just default to the roughness value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "roughnessMapUv",
                    "displayName": "    UV",
                    "description": "Roughness texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_clearCoatRoughnessMapUvIndex"
                    }
                },
                {
                    "id": "normalStrength",
                    "displayName": "Normal Strength",
                    "description": "Scales the impact of the clear coat normal map",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_clearCoatNormalStrength"
                    }
                },
                {
                    "id": "normalMap",
                    "displayName": "Normal Map",
                    "description": "Normal map for clear coat layer, as top layer material clear coat doesn't affect by base layer normal map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_clearCoatNormalMap"
                    }
                },
                {
                    "id": "useNormalMap",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the normal map",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "normalMapUv",
                    "displayName": "    UV",
                    "description": "Normal texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_clearCoatNormalMapUvIndex"
                    }
                }
            ],
            "layer2_occlusion": [
                {
                    "id": "diffuseTextureMap",
                    "displayName": "Diffuse AO",
                    "description": "Texture map for defining occlusion area for diffuse ambient lighting.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_diffuseOcclusionMap"
                    }
                },
                {
                    "id": "diffuseUseTexture",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the Diffuse AO texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "diffuseTextureMapUv",
                    "displayName": "    UV",
                    "description": "Diffuse AO texture map UV set.",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_diffuseOcclusionMapUvIndex"
                    }
                },
                {
                    "id": "diffuseFactor",
                    "displayName": "    Factor",
                    "description": "Strength factor for scaling the values of Diffuse AO",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_diffuseOcclusionFactor"
                    }
                },
                {
                    "id": "specularTextureMap",
                    "displayName": "Specular Cavity",
                    "description": "Texture map for defining occlusion area for specular lighting.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_specularOcclusionMap"
                    }
                },
                {
                    "id": "specularUseTexture",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the Specular Cavity texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "specularTextureMapUv",
                    "displayName": "    UV",
                    "description": "Specular Cavity texture map UV set.",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_specularOcclusionMapUvIndex"
                    }
                },
                {
                    "id": "specularFactor",
                    "displayName": "    Factor",
                    "description": "Strength factor for scaling the values of Specular Cavity",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_specularOcclusionFactor"
                    }
                }
            ],
            "layer2_emissive": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Enable the emissive group",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "id": "unit",
                    "displayName": "Units",
                    "description": "The photometric units of the Intensity property.",
                    "type": "Enum",
                    "enumValues": ["Ev100"],
                    "defaultValue": "Ev100"
                },
                {
                    "id": "color",
                    "displayName": "Color",
                    "description": "Color is displayed as sRGB but the values are stored as linear color.",
                    "type": "Color",
                    "defaultValue": [ 1.0, 1.0, 1.0 ],
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_emissiveColor"
                    }
                },
                {
                    "id": "intensity",
                    "displayName": "Intensity",
                    "description": "The amount of energy emitted.",
                    "type": "Float",
                    "defaultValue": 4,
                    "min": -10,
                    "max": 20,
                    "softMin": -6,
                    "softMax": 16
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining emissive area.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_emissiveMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Emissive texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_emissiveMapUvIndex"
                    }
                }
            ],
            "layer2_parallax": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Whether to enable the parallax feature.",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Depthmap to create parallax effect.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_depthMap"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the depth values",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "softMax": 0.1,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_depthFactor"
                    }
                },
                {
                    "id": "invert",
                    "displayName": "Invert",
                    "description": "Invert to depthmap if the texture is heightmap",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer2_m_depthInverted"
                    }
                }
            ],
            "layer2_uv": [
                {
                    "id": "center",
                    "displayName": "Center",
                    "description": "Center point for scaling and rotation transformations.",
                    "type": "vector2",
                    "vectorLabels": [ "U", "V" ],
                    "defaultValue": [ 0.0, 0.0 ]
                },
                {
                    "id": "tileU",
                    "displayName": "Tile U",
                    "description": "Scales texture coordinates in V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "id": "tileV",
                    "displayName": "Tile V",
                    "description": "Scales texture coordinates in V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "id": "offsetU",
                    "displayName": "Offset U",
                    "description": "Offsets texture coordinates in the U direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.001
                },
                {
                    "id": "offsetV",
                    "displayName": "Offset V",
                    "description": "Offsets texture coordinates in the V direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.001
                },
                {
                    "id": "rotateDegrees",
                    "displayName": "Rotate",
                    "description": "Rotates the texture coordinates (degrees).",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -180.0,
                    "max": 180.0,
                    "step": 1.0
                },
                {
                    "id": "scale",
                    "displayName": "Scale",
                    "description": "Scales texture coordinates in both U and V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                }
            ],
            //##############################################################################################
            // Layer 3 Properties 
            //##############################################################################################
            "layer3_baseColor": [
                {
                    "id": "color",
                    "displayName": "Color",
                    "description": "Color is displayed as sRGB but the values are stored as linear color.",
                    "type": "Color",
                    "defaultValue": [ 1.0, 1.0, 1.0 ],
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_baseColor"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the base color values. Zero (0.0) is black, white (1.0) is full color.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_baseColorFactor"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Base color texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_baseColorMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Base color texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_baseColorMapUvIndex"
                    }
                },
                {
                    "id": "textureBlendMode",
                    "displayName": "Texture Blend Mode",
                    "description": "Selects the equation to use when combining Color, Factor, and Texture Map.",
                    "type": "Enum",
                    "enumValues": [ "Multiply", "LinearLight", "Lerp", "Overlay" ],
                    "defaultValue": "Multiply",
                    "connection": {
                        "type": "ShaderOption",
                        "id": "o_layer3_o_baseColorTextureBlendMode"
                    }
                }
            ],
            "layer3_metallic": [
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "This value is linear, black is non-metal and white means raw metal.",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_metallicFactor"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_metallicMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Metallic texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_metallicMapUvIndex"
                    }
                }
            ],
            "layer3_roughness": [
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface roughness.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_roughnessMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Roughness texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_roughnessMapUvIndex"
                    }
                },
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "id": "lowerBound",
                    "displayName": "Lower Bound",
                    "description": "The roughness value that corresponds to black in the texture map.",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_roughnessLowerBound"
                    }
                },
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "id": "upperBound",
                    "displayName": "Upper Bound",
                    "description": "The roughness value that corresponds to white in the texture map.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_roughnessUpperBound"
                    }
                },
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Controls the roughness value",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_roughnessFactor"
                    }
                }
            ],
            "layer3_specularF0": [
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "The default IOR is 1.5, which gives you 0.04 (4% of light reflected at 0 degree angle for dielectric materials). F0 values lie in the range 0-0.08, so that is why the default F0 slider is set on 0.5.",
                    "type": "Float",
                    "defaultValue": 0.5,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_specularF0Factor"
                    }
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface reflectance.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_specularF0Map"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Specular reflection texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_specularF0MapUvIndex"
                    }
                }
            ],
            "layer3_normal": [
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining surface normal direction.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_normalMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map, or just rely on vertex normals.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Normal texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_normalMapUvIndex"
                    }
                },
                {
                    "id": "flipX",
                    "displayName": "Flip X Channel",
                    "description": "Flip tangent direction for this normal map.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_flipNormalX"
                    }
                },
                {
                    "id": "flipY",
                    "displayName": "Flip Y Channel",
                    "description": "Flip bitangent direction for this normal map.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_flipNormalY"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the values",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_normalFactor"
                    }
                }
            ],
            "layer3_clearCoat": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Enable clear coat",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the percentage of effect applied",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_clearCoatFactor"
                    }
                },
                {
                    "id": "influenceMap",
                    "displayName": "    Influence Map",
                    "description": "Strength factor texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_clearCoatInfluenceMap"
                    }
                },
                {
                    "id": "useInfluenceMap",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the texture map, or just default to the Factor value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "influenceMapUv",
                    "displayName": "    UV",
                    "description": "Strength factor texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_clearCoatInfluenceMapUvIndex"
                    }
                },
                {
                    "id": "roughness",
                    "displayName": "Roughness",
                    "description": "Clear coat layer roughness",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_clearCoatRoughness"
                    }
                },
                {
                    "id": "roughnessMap",
                    "displayName": "    Roughness Map",
                    "description": "Roughness texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_clearCoatRoughnessMap"
                    }
                },
                {
                    "id": "useRoughnessMap",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the texture map, or just default to the roughness value.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "roughnessMapUv",
                    "displayName": "    UV",
                    "description": "Roughness texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_clearCoatRoughnessMapUvIndex"
                    }
                },
                {
                    "id": "normalStrength",
                    "displayName": "Normal Strength",
                    "description": "Scales the impact of the clear coat normal map",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_clearCoatNormalStrength"
                    }
                },
                {
                    "id": "normalMap",
                    "displayName": "Normal Map",
                    "description": "Normal map for clear coat layer, as top layer material clear coat doesn't affect by base layer normal map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_clearCoatNormalMap"
                    }
                },
                {
                    "id": "useNormalMap",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the normal map",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "normalMapUv",
                    "displayName": "    UV",
                    "description": "Normal texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_clearCoatNormalMapUvIndex"
                    }
                }
            ],
            "layer3_occlusion": [
                {
                    "id": "diffuseTextureMap",
                    "displayName": "Diffuse AO",
                    "description": "Texture map for defining occlusion area for diffuse ambient lighting.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_diffuseOcclusionMap"
                    }
                },
                {
                    "id": "diffuseUseTexture",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the Diffuse AO texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "diffuseTextureMapUv",
                    "displayName": "    UV",
                    "description": "Diffuse AO texture map UV set.",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_diffuseOcclusionMapUvIndex"
                    }
                },
                {
                    "id": "diffuseFactor",
                    "displayName": "    Factor",
                    "description": "Strength factor for scaling the values of Diffuse AO",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_diffuseOcclusionFactor"
                    }
                },
                {
                    "id": "specularTextureMap",
                    "displayName": "Specular Cavity",
                    "description": "Texture map for defining occlusion area for specular lighting.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_specularOcclusionMap"
                    }
                },
                {
                    "id": "specularUseTexture",
                    "displayName": "    Use Texture",
                    "description": "Whether to use the Specular Cavity texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "specularTextureMapUv",
                    "displayName": "    UV",
                    "description": "Specular Cavity texture map UV set.",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_specularOcclusionMapUvIndex"
                    }
                },
                {
                    "id": "specularFactor",
                    "displayName": "    Factor",
                    "description": "Strength factor for scaling the values of Specular Cavity",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "softMax": 2.0,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_specularOcclusionFactor"
                    }
                }
            ],
            "layer3_emissive": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Enable the emissive group",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "id": "unit",
                    "displayName": "Units",
                    "description": "The photometric units of the Intensity property.",
                    "type": "Enum",
                    "enumValues": ["Ev100"],
                    "defaultValue": "Ev100"
                },
                {
                    "id": "color",
                    "displayName": "Color",
                    "description": "Color is displayed as sRGB but the values are stored as linear color.",
                    "type": "Color",
                    "defaultValue": [ 1.0, 1.0, 1.0 ],
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_emissiveColor"
                    }
                },
                {
                    "id": "intensity",
                    "displayName": "Intensity",
                    "description": "The amount of energy emitted.",
                    "type": "Float",
                    "defaultValue": 4,
                    "min": -10,
                    "max": 20,
                    "softMin": -6,
                    "softMax": 16
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Texture map for defining emissive area.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_emissiveMap"
                    }
                },
                {
                    "id": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture map.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "id": "textureMapUv",
                    "displayName": "UV",
                    "description": "Emissive texture map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_emissiveMapUvIndex"
                    }
                }
            ],
            "layer3_parallax": [
                {
                    "id": "enable",
                    "displayName": "Enable",
                    "description": "Whether to enable the parallax feature.",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "id": "textureMap",
                    "displayName": "Texture Map",
                    "description": "Depthmap to create parallax effect.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_depthMap"
                    }
                },
                {
                    "id": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the depth values",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "softMax": 0.1,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_depthFactor"
                    }
                },
                {
                    "id": "invert",
                    "displayName": "Invert",
                    "description": "Invert to depthmap if the texture is heightmap",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderInput",
                        "id": "m_layer3_m_depthInverted"
                    }
                }
            ],
            "layer3_uv": [
                {
                    "id": "center",
                    "displayName": "Center",
                    "description": "Center point for scaling and rotation transformations.",
                    "type": "vector2",
                    "vectorLabels": [ "U", "V" ],
                    "defaultValue": [ 0.0, 0.0 ]
                },
                {
                    "id": "tileU",
                    "displayName": "Tile U",
                    "description": "Scales texture coordinates in V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "id": "tileV",
                    "displayName": "Tile V",
                    "description": "Scales texture coordinates in V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "id": "offsetU",
                    "displayName": "Offset U",
                    "description": "Offsets texture coordinates in the U direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.001
                },
                {
                    "id": "offsetV",
                    "displayName": "Offset V",
                    "description": "Offsets texture coordinates in the V direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.001
                },
                {
                    "id": "rotateDegrees",
                    "displayName": "Rotate",
                    "description": "Rotates the texture coordinates (degrees).",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -180.0,
                    "max": 180.0,
                    "step": 1.0
                },
                {
                    "id": "scale",
                    "displayName": "Scale",
                    "description": "Scales texture coordinates in both U and V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                }
            ]
        }
    },
    "shaders": [ 
        {
            "file": "./StandardMultilayerPBR_ForwardPass.shader",
            "tag": "ForwardPass"
        },
        {
            "file": "./StandardMultilayerPBR_ForwardPass_EDS.shader",
            "tag": "ForwardPass_EDS"
        },
        {
            "file": "Shaders/Shadow/Shadowmap.shader",
            "tag": "Shadowmap"
        },
        {
            "file": "./StandardMultilayerPBR_Shadowmap_WithPS.shader",
            "tag": "Shadowmap_WithPS"
        },
        {
            "file": "Shaders/Depth/DepthPass.shader",
            "tag": "DepthPass"
        },
        {
            "file": "./StandardMultilayerPBR_DepthPass_WithPS.shader",
            "tag": "DepthPass_WithPS"
        },
        // [GFX TODO][ATOM-4726] Use an "isSkinnedMesh" external material property and a functor that enables/disables the appropriate motion-vector shader
        {
            "file": "Shaders/MotionVector/StaticMeshMotionVector.shader",
            "tag": "StaticMeshMotionVector"
        },
        {
            "file": "Shaders/MotionVector/SkinnedMeshMotionVector.shader",
            "tag": "SkinnedMeshMotionVector"
        },
        // Used by the light culling system to produce accurate depth bounds for this object when it uses blended transparency
        {
            "file": "Shaders/Depth/DepthPassTransparentMin.shader",
            "tag": "DepthPassTransparentMin"
        },
        {
            "file": "Shaders/Depth/DepthPassTransparentMax.shader",
            "tag": "DepthPassTransparentMax"
        }        
    ],
    "functors": [
        //##############################################################################################
        // General Functors 
        //##############################################################################################
        {
            // Maps 2D scale, offset, and rotate properties into a float3x3 transform matrix.
            "type": "Transform2D",
            "args": {
                "transformOrder": [ "Rotate", "Translate", "Scale" ],
                "centerProperty": "uv.center",
                "scaleProperty": "uv.scale",
                "scaleXProperty": "uv.tileU",
                "scaleYProperty": "uv.tileV",
                "translateXProperty": "uv.offsetU",
                "translateYProperty": "uv.offsetV",
                "rotateDegreesProperty": "uv.rotateDegrees",
                "float3x3ShaderInput": "m_uvMatrix",
                "float3x3InverseShaderInput": "m_uvMatrixInverse"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_ShaderEnable.lua"
            }
        },
        {
            // Preprocess & build parameter set for subsurface scattering and translucency
            "type": "HandleSubsurfaceScatteringParameters",
            "args": {
                "mode": "subsurfaceScattering.transmissionMode",
                "scale" : "subsurfaceScattering.transmissionScale",
                "power" : "subsurfaceScattering.transmissionPower",
                "distortion" : "subsurfaceScattering.transmissionDistortion",
                "attenuation" : "subsurfaceScattering.transmissionAttenuation",
                "tintColor" : "subsurfaceScattering.transmissionTint",
                "thickness" : "subsurfaceScattering.thickness",
                "enabled": "subsurfaceScattering.enableSubsurfaceScattering",
                "scatterDistanceColor" : "subsurfaceScattering.scatterColor",
                "scatterDistanceIntensity" : "subsurfaceScattering.scatterDistance",
                "scatterDistanceShaderInput" : "m_scatterDistance",
                "parametersShaderInput" : "m_transmissionParams",
                "tintThickenssShaderInput" : "m_transmissionTintThickness"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardMultilayerPBR_ClearCoatEnableFeature.lua"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardMultilayerPBR_Parallax.lua"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_SubsurfaceState.lua"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_HandleOpacityDoubleSided.lua"
            }
        },
        {
            "type": "OverrideDrawList",
            "args": {
                "triggerProperty": "opacity.mode",
                "triggerValue": "Blended",
                "shaderIndex": 1,
                "drawList": "transparent"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_HandleOpacityMode.lua"
            }
        },
        //##############################################################################################
        // Layer 1 Functors 
        //##############################################################################################
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer1_baseColor.textureMap",
                "useTextureProperty": "layer1_baseColor.useTexture",
                "dependentProperties": ["layer1_baseColor.textureMapUv", "layer1_baseColor.textureBlendMode"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer1_o_baseColor_useTexture"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer1_metallic.textureMap",
                "useTextureProperty": "layer1_metallic.useTexture",
                "dependentProperties": ["layer1_metallic.textureMapUv"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer1_o_metallic_useTexture"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_Roughness.lua",
                "propertyNamePrefix": "layer1_",
                "srgNamePrefix": "m_layer1_",
                "optionsNamePrefix": "o_layer1_"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer1_specularF0.textureMap",
                "useTextureProperty": "layer1_specularF0.useTexture",
                "dependentProperties": ["layer1_specularF0.textureMapUv"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer1_o_specularF0_useTexture"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer1_normal.textureMap",
                "useTextureProperty": "layer1_normal.useTexture",
                "dependentProperties": ["layer1_normal.textureMapUv", "layer1_normal.factor", "layer1_normal.flipX", "layer1_normal.flipY"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer1_o_normal_useTexture"    
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_ClearCoatState.lua",
                "propertyNamePrefix": "layer1_",
                "srgNamePrefix": "m_layer1_",
                "optionsNamePrefix": "o_layer1_"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer1_occlusion.diffuseTextureMap",
                "useTextureProperty": "layer1_occlusion.diffuseUseTexture",
                "dependentProperties": ["layer1_occlusion.diffuseTextureMapUv", "layer1_occlusion.diffuseFactor"],
                "shaderOption": "o_layer1_o_diffuseOcclusion_useTexture"    
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer1_occlusion.specularTextureMap",
                "useTextureProperty": "layer1_occlusion.specularUseTexture",
                "dependentProperties": ["layer1_occlusion.specularTextureMapUv", "layer1_occlusion.specularFactor"],
                "shaderOption": "o_layer1_o_specularOcclusion_useTexture"    
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_EmissiveState.lua",
                "propertyNamePrefix": "layer1_",
                "srgNamePrefix": "m_layer1_",
                "optionsNamePrefix": "o_layer1_"
            }
        },
        {
            // Convert emissive unit.
            "type": "ConvertEmissiveUnit",
            "args": {
                "intensityProperty": "layer1_emissive.intensity",
                "lightUnitProperty": "layer1_emissive.unit",
                "shaderInput": "m_layer1_m_emissiveIntensity",
                "ev100Index": 0,
                "nitIndex" : 1,
                "ev100MinMax": [-10, 20],
                "nitMinMax": [0.001, 100000.0]
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardMultilayerPBR_ParallaxPerLayer.lua",
                "propertyNamePrefix": "layer1_",
                "srgNamePrefix": "m_layer1_",
                "optionsNamePrefix": "o_layer1_"
            }
        },
        {
            // Maps 2D scale, offset, and rotate properties into a float3x3 transform matrix.
            "type": "Transform2D",
            "args": {
                "transformOrder": [ "Rotate", "Translate", "Scale" ],
                "centerProperty": "layer1_uv.center",
                "scaleProperty": "layer1_uv.scale",
                "scaleXProperty": "layer1_uv.tileU",
                "scaleYProperty": "layer1_uv.tileV",
                "translateXProperty": "layer1_uv.offsetU",
                "translateYProperty": "layer1_uv.offsetV",
                "rotateDegreesProperty": "layer1_uv.rotateDegrees",
                "float3x3ShaderInput": "m_layer1_m_uvMatrix"
            }
        },
        //##############################################################################################
        // Layer 2 Functors 
        //##############################################################################################
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer2_baseColor.textureMap",
                "useTextureProperty": "layer2_baseColor.useTexture",
                "dependentProperties": ["layer2_baseColor.textureMapUv", "layer2_baseColor.textureBlendMode"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer2_o_baseColor_useTexture"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer2_metallic.textureMap",
                "useTextureProperty": "layer2_metallic.useTexture",
                "dependentProperties": ["layer2_metallic.textureMapUv"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer2_o_metallic_useTexture"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_Roughness.lua",
                "propertyNamePrefix": "layer2_",
                "srgNamePrefix": "m_layer2_",
                "optionsNamePrefix": "o_layer2_"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer2_specularF0.textureMap",
                "useTextureProperty": "layer2_specularF0.useTexture",
                "dependentProperties": ["layer2_specularF0.textureMapUv"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer2_o_specularF0_useTexture"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer2_normal.textureMap",
                "useTextureProperty": "layer2_normal.useTexture",
                "dependentProperties": ["layer2_normal.textureMapUv", "layer2_normal.factor", "layer2_normal.flipX", "layer2_normal.flipY"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer2_o_normal_useTexture"    
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_ClearCoatState.lua",
                "propertyNamePrefix": "layer2_",
                "srgNamePrefix": "m_layer2_",
                "optionsNamePrefix": "o_layer2_"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer2_occlusion.diffuseTextureMap",
                "useTextureProperty": "layer2_occlusion.diffuseUseTexture",
                "dependentProperties": ["layer2_occlusion.diffuseTextureMapUv", "layer2_occlusion.diffuseFactor"],
                "shaderOption": "o_layer2_o_diffuseOcclusion_useTexture"    
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer2_occlusion.specularTextureMap",
                "useTextureProperty": "layer2_occlusion.specularUseTexture",
                "dependentProperties": ["layer2_occlusion.specularTextureMapUv", "layer2_occlusion.specularFactor"],
                "shaderOption": "o_layer2_o_specularOcclusion_useTexture"    
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_EmissiveState.lua",
                "propertyNamePrefix": "layer2_",
                "srgNamePrefix": "m_layer2_",
                "optionsNamePrefix": "o_layer2_"
            }
        },
        {
            // Convert emissive unit.
            "type": "ConvertEmissiveUnit",
            "args": {
                "intensityProperty": "layer2_emissive.intensity",
                "lightUnitProperty": "layer2_emissive.unit",
                "shaderInput": "m_layer2_m_emissiveIntensity",
                "ev100Index": 0,
                "nitIndex" : 1,
                "ev100MinMax": [-10, 20],
                "nitMinMax": [0.001, 100000.0]
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardMultilayerPBR_ParallaxPerLayer.lua",
                "propertyNamePrefix": "layer2_",
                "srgNamePrefix": "m_layer2_",
                "optionsNamePrefix": "o_layer2_"
            }
        },
        {
            // Maps 2D scale, offset, and rotate properties into a float3x3 transform matrix.
            "type": "Transform2D",
            "args": {
                "transformOrder": [ "Rotate", "Translate", "Scale" ],
                "centerProperty": "layer2_uv.center",
                "scaleProperty": "layer2_uv.scale",
                "scaleXProperty": "layer2_uv.tileU",
                "scaleYProperty": "layer2_uv.tileV",
                "translateXProperty": "layer2_uv.offsetU",
                "translateYProperty": "layer2_uv.offsetV",
                "rotateDegreesProperty": "layer2_uv.rotateDegrees",
                "float3x3ShaderInput": "m_layer2_m_uvMatrix"
            }
        },
        //##############################################################################################
        // Layer 3 Functors 
        //##############################################################################################
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer3_baseColor.textureMap",
                "useTextureProperty": "layer3_baseColor.useTexture",
                "dependentProperties": ["layer3_baseColor.textureMapUv", "layer3_baseColor.textureBlendMode"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer3_o_baseColor_useTexture"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer3_metallic.textureMap",
                "useTextureProperty": "layer3_metallic.useTexture",
                "dependentProperties": ["layer3_metallic.textureMapUv"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer3_o_metallic_useTexture"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_Roughness.lua",
                "propertyNamePrefix": "layer3_",
                "srgNamePrefix": "m_layer3_",
                "optionsNamePrefix": "o_layer3_"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer3_specularF0.textureMap",
                "useTextureProperty": "layer3_specularF0.useTexture",
                "dependentProperties": ["layer3_specularF0.textureMapUv"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer3_o_specularF0_useTexture"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer3_normal.textureMap",
                "useTextureProperty": "layer3_normal.useTexture",
                "dependentProperties": ["layer3_normal.textureMapUv", "layer3_normal.factor", "layer3_normal.flipX", "layer3_normal.flipY"],
                "shaderTags": [ 
                    "ForwardPass",
                    "ForwardPass_EDS"
                ],
                "shaderOption": "o_layer3_o_normal_useTexture"    
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_ClearCoatState.lua",
                "propertyNamePrefix": "layer3_",
                "srgNamePrefix": "m_layer3_",
                "optionsNamePrefix": "o_layer3_"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer3_occlusion.diffuseTextureMap",
                "useTextureProperty": "layer3_occlusion.diffuseUseTexture",
                "dependentProperties": ["layer3_occlusion.diffuseTextureMapUv", "layer3_occlusion.diffuseFactor"],
                "shaderOption": "o_layer3_o_diffuseOcclusion_useTexture"    
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "layer3_occlusion.specularTextureMap",
                "useTextureProperty": "layer3_occlusion.specularUseTexture",
                "dependentProperties": ["layer3_occlusion.specularTextureMapUv", "layer3_occlusion.specularFactor"],
                "shaderOption": "o_layer3_o_specularOcclusion_useTexture"    
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardPBR_EmissiveState.lua",
                "propertyNamePrefix": "layer3_",
                "srgNamePrefix": "m_layer3_",
                "optionsNamePrefix": "o_layer3_"
            }
        },
        {
            // Convert emissive unit.
            "type": "ConvertEmissiveUnit",
            "args": {
                "intensityProperty": "layer3_emissive.intensity",
                "lightUnitProperty": "layer3_emissive.unit",
                "shaderInput": "m_layer3_m_emissiveIntensity",
                "ev100Index": 0,
                "nitIndex" : 1,
                "ev100MinMax": [-10, 20],
                "nitMinMax": [0.001, 100000.0]
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "StandardMultilayerPBR_ParallaxPerLayer.lua",
                "propertyNamePrefix": "layer3_",
                "srgNamePrefix": "m_layer3_",
                "optionsNamePrefix": "o_layer3_"
            }
        }, 
        {
            // Maps 2D scale, offset, and rotate properties into a float3x3 transform matrix.
            "type": "Transform2D",
            "args": {
                "transformOrder": [ "Rotate", "Translate", "Scale" ],
                "centerProperty": "layer3_uv.center",
                "scaleProperty": "layer3_uv.scale",
                "scaleXProperty": "layer3_uv.tileU",
                "scaleYProperty": "layer3_uv.tileV",
                "translateXProperty": "layer3_uv.offsetU",
                "translateYProperty": "layer3_uv.offsetV",
                "rotateDegreesProperty": "layer3_uv.rotateDegrees",
                "float3x3ShaderInput": "m_layer3_m_uvMatrix"
            }
        }
    ],
    "uvNameMap": {
        "UV0": "Tiled",
        "UV1": "Unwrapped"
    }
}

