/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#include <Atom/Features/PBR/DefaultObjectSrg.azsli>
#include <viewsrg.srgi>

struct VSInput
{
    float3 m_position : POSITION;
};
 
struct VSDepthOutput
{
    precise float4 m_position : SV_Position;
};

#define MATERIALPIPELINE_SHADER_HAS_PIXEL_STAGE 0
#include <Atom/RPI/MaterialPipelineCallbacks.azsli>

VSDepthOutput DepthPassVS(VSInput IN)
{
    VertexData adjustableVertexData;
    adjustableVertexData.InitializeToZero();
    adjustableVertexData.positionWS = LocalSpaceToWorldSpace(IN.m_position);

    MaterialFunction_AdjustVertexData(IN.m_position, adjustableVertexData);
    
    VSDepthOutput OUT;
    OUT.m_position = mul(ViewSrg::m_viewProjectionMatrix, float4(adjustableVertexData.positionWS, 1.0));
    return OUT;
}


