{
    "shaderTemplates": [
        // Unlike Standard and Enhanced, BaseLighting doesn't have "_CustomZ" just because BasePBR.materialtype doesn't use alpha cutout or POM PDO, so we don't need it right now.
        // But that could be added if some other material type wants to use BaseLighting with one of these features, as they don't really relate to the lighting model.
        {
            "shader": "./ForwardPass_BaseLighting.shader.template",
            "azsli": "./ForwardPass_BaseLighting.azsli",
            "tag": "forward"
        },
        {
            "shader": "./ForwardPass_StandardLighting.shader.template",
            "azsli": "./ForwardPass_StandardLighting.azsli",
            "tag": "forward"
        },
        {
            "shader": "./ForwardPass_StandardLighting_CustomZ.shader.template",
            "azsli": "./ForwardPass_StandardLighting_CustomZ.azsli",
            "tag": "forward_customZ"
        },
        {
            "shader": "./Transparent_StandardLighting.shader.template",
            "azsli": "./Transparent_StandardLighting.azsli",
            "tag": "transparent"
        },
        {
            "shader": "../Common/ShadowmapPass.shader.template",
            "azsli": "../Common/DepthPass.azsli",
            "tag": "shadow"
        },
        {
            "shader": "../Common/ShadowmapPass_CustomZ.shader.template",
            "azsli": "../Common/DepthPass_CustomZ.azsli",
            "tag": "shadow_customZ"
        },
        // TODO(MaterialPipeline): The TintedTransparent shaders uses the same azsli file as the normal Transparent shaders, they just need
        // a different blend state. This results in a redundant shader compilation. We should find some way to reuse the same compiled bytecode
        // rather than compiling each transparent shader twice. Note we are trying to avoid using the lua material functor's render state override
        // features, so they can be deprecated. See https://github.com/o3de/sig-graphics-audio/issues/74
        {
            "shader": "./TintedTransparent_StandardLighting.shader.template",
            "azsli": "./Transparent_StandardLighting.azsli",
            "tag": "tintedTransparent"
        }
    ],
    "runtime": {
        "properties": [
            {
                "name": "isTransparent",
                "type": "Bool",
                "defaultValue": false
            },
            {
                "name": "isTintedTransparent",
                "type": "Bool",
                "defaultValue": false
            },
            {
                "name": "castShadows",
                "type": "Bool",
                "defaultValue": true
            },
            {
                "name": "doubleSided",
                "type": "Bool",
                "defaultValue": false
            },
            {
                "name": "hasPerPixelClip",
                "type": "Bool",
                "defaultValue": false
            }
        ],
        "functors": 
        [
            {
                "type": "Lua",
                "args": {
                    //TODO(MaterialPipeline): Make the builder touch up this path so it can be relative to the .materialpipeline file
                    "file": "Materials/Pipelines/Common/ShaderEnable.lua"
                }
            },
            {
                "type": "Lua",
                "args": {
                    //TODO(MaterialPipeline): Make the builder touch up this path so it can be relative to the .materialpipeline file
                    "file": "Materials/Pipelines/Common/DoubleSided.lua"
                }
            }
        ]
    },
    "pipelineScript": "./MobilePipelineScript.lua"
}
