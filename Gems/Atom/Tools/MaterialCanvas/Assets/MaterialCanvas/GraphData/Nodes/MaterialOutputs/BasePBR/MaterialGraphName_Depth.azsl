/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#include <scenesrg.srgi>
#include <viewsrg.srgi>
#include <Atom/Features/PBR/DefaultObjectSrg.azsli>
#include <Atom/RPI/ShaderResourceGroups/DefaultDrawSrg.azsli>
#include <Atom/Features/Pipeline/Forward/ForwardPassOutput.azsli>
#include <Atom/Features/Pipeline/Forward/ForwardPassSrg.azsli>
#include <Atom/RPI/ShaderResourceGroups/DefaultDrawSrg.azsli>
#include <Atom/Features/SrgSemantics.azsli>

#include "MaterialGraphName_Common.azsli"

VsOutput MainVS(VsInput IN)
{
    return EvaluateVertexGeometry(IN);
}

struct PsDepthOutput
{
    precise float depth : SV_Depth;
};

PsDepthOutput MainPS(VsOutput IN, bool isFrontFace : SV_IsFrontFace)
{
    PsDepthOutput OUT;
    OUT.depth = IN.position.z;

#if DEPTH_WITH_PS
    PixelGeometryData geoData = EvaluatePixelGeometry(IN, isFrontFace);

    Surface surface = EvaluateSurface(geoData);

    CheckClipping(surface.alpha, 0.0);

    OUT.depth = surface.position.z;
#endif

    return OUT;
}
