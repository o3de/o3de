
#include <Atom/Features/SrgSemantics.azsli>

ShaderResourceGroup MaterialSrg : SRG_PerMaterial
{
    float3 m_baseColor;
    float m_metallic;
    float m_roughness;
    float m_animationSpeed;
    float m_amplitude;
    float m_frequency;
}

void MaterialFunction_AdjustVertexData(in float3 positionLS, inout VertexData vertexData)
{
    float amount = sin(3.14159 * 2 * (SceneSrg::m_time * MaterialSrg::m_animationSpeed + (positionLS.x + positionLS.y + positionLS.z) * MaterialSrg::m_frequency)) * MaterialSrg::m_amplitude;

    float3 dir = normalize(positionLS);

    positionLS += dir * amount;

    vertexData.positionWS = LocalSpaceToWorldSpace(positionLS);
}
#define MaterialFunction_AdjustVertexData_DEFINED 1

#if MATERIALPIPELINE_SHADER_HAS_PIXEL_STAGE

void MaterialFunction_AdjustSurface(inout Surface surface)
{
    surface.roughnessLinear = MaterialSrg::m_roughness;
    float3 baseColor = MaterialSrg::m_baseColor;
    float metallic = MaterialSrg::m_metallic;
    float specularF0Factor = 0.5f;
    surface.SetAlbedoAndSpecularF0(baseColor, specularF0Factor, metallic);
}
#define MaterialFunction_AdjustSurface_DEFINED 1

#endif
