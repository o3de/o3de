/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */
 
#include <EditorModeCommon.azsli>
#include <EditorModeDepthTransition.azsli>
 
partial ShaderResourceGroup PassSrg : SRG_PerPass_WithFallback
{ 
    //! Amount of desaturation to apply.
    float m_desaturationAmount;
}

PSOutput MainPS(VSOutput IN)
{
    PSOutput OUT;

    const float3 inColor = PassSrg::m_framebuffer.Sample(PassSrg::LinearSampler, IN.m_texCoord).rgb;
    const float mask = PassSrg::m_entityMask.Sample(PassSrg::PointSampler, IN.m_texCoord).r;

    // Desaturation effect
    const float3 luminanceWeights = float3(0.299, 0.587, 0.114);
    const float luminance = dot(inColor, luminanceWeights);
    const float3 finalEffect = lerp(inColor, luminance, PassSrg::m_desaturationAmount);

    // Apply the depth transition to the blend amount
    const float zDepth =  PassSrg::m_depth.Sample(PassSrg::PointSampler, IN.m_texCoord).r;
    const float t = PassSrg::CalculateTransitionBlendAmountFromDepth(zDepth, mask);
    
    // Apply the visual effect to non-mask entities, leaving mask entities untouched
    OUT.m_color = PassSrg::CalculateFinalBlendAmountAndOutputColor(inColor, finalEffect, t);

    return OUT;
}